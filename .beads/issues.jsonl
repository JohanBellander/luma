{"id":"LUMA-1","title":"LUMA v1.0 Implementation","description":"Complete implementation of LUMA v1.0 - Layout \u0026 UX Mockup Analyzer CLI tool.\n\nThis epic tracks the full implementation across 10 phases:\n- Phase 1: Project Setup \u0026 Core Types\n- Phase 2: Ingest Command\n- Phase 3: Responsive Override System\n- Phase 4: Headless Layout Engine\n- Phase 5: Keyboard Flow Analysis\n- Phase 6: UX Pattern Library\n- Phase 7: Scoring System\n- Phase 8: Self-Description Commands\n- Phase 9: Report Generation\n- Phase 10: Integration \u0026 Polish\n\nTarget: TypeScript CLI tool that validates UI scaffolds against spec\nTimeline: 4-6 weeks (single developer, full-time)\nSee: IMPLEMENTATION-PLAN.md for full details","status":"closed","priority":1,"issue_type":"epic","created_at":"2025-10-27T13:15:47.8824266+01:00","updated_at":"2025-10-27T20:42:31.0257034+01:00","closed_at":"2025-10-27T20:42:31.0257034+01:00"}
{"id":"LUMA-10","title":"Phase 7: Scoring System","description":"Implement category scoring and aggregation per spec Section 8.\n\nDeliverables:\n1. Scoring Engine (src/core/scoring/)\n   - categories.ts - Category score calculation\n   - Pattern Fidelity: 100 - 30*MUST - 10*SHOULD\n   - Flow \u0026 Reachability: 100 - 30*unreachable - 10*warn\n   - Hierarchy \u0026 Grouping: 100 - 10*structural - 5*spacing\n   - Responsive Behavior: penalties across viewports\n   - aggregate.ts - Weighted aggregation (45%, 25%, 20%, 10%)\n\n2. Pass/Fail Logic\n   - No MUST failures\n   - No critical flow errors\n   - overall  85 (configurable)\n\n3. CLI Command\n   - score.command.ts - Read run folder artifacts\n   - Optional --weights JSON override\n   - Write score.json\n   - Exit 0 (pass) or 3 (fail)\n\n4. Tests (tests/unit/scoring/)\n   - Category calculations\n   - Weight application\n   - Pass criteria\n   - Custom weights\n   - Coverage  90%\n\nExit: luma score works, formulas match spec\nTime: 2-3 days","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T13:19:39.4490089+01:00","updated_at":"2025-10-27T20:20:53.0768381+01:00","closed_at":"2025-10-27T20:20:53.0768381+01:00","dependencies":[{"issue_id":"LUMA-10","depends_on_id":"LUMA-9","type":"blocks","created_at":"2025-10-27T13:21:33.7005741+01:00","created_by":"daemon"}]}
{"id":"LUMA-100","title":"Fix layout viewport parsing NaN bug","description":"","status":"closed","priority":1,"issue_type":"bug","created_at":"2025-11-01T19:51:41.1860274+01:00","updated_at":"2025-11-01T20:12:06.2343016+01:00","closed_at":"2025-11-01T20:12:06.2343016+01:00","dependencies":[{"issue_id":"LUMA-100","depends_on_id":"LUMA-98","type":"discovered-from","created_at":"2025-11-01T19:51:41.1893262+01:00","created_by":"daemon"}]}
{"id":"LUMA-101","title":"Add luma validate pipeline command","description":"","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-11-01T19:51:43.617068+01:00","updated_at":"2025-11-01T20:19:55.9017369+01:00","closed_at":"2025-11-01T20:19:55.9017369+01:00","dependencies":[{"issue_id":"LUMA-101","depends_on_id":"LUMA-98","type":"discovered-from","created_at":"2025-11-01T19:51:43.6207033+01:00","created_by":"daemon"}]}
{"id":"LUMA-102","title":"Improve pattern unknown error messaging \u0026 alias listing","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-11-01T19:51:49.5427074+01:00","updated_at":"2025-11-01T20:31:53.5498829+01:00","closed_at":"2025-11-01T20:31:53.5498829+01:00","dependencies":[{"issue_id":"LUMA-102","depends_on_id":"LUMA-98","type":"discovered-from","created_at":"2025-11-01T19:51:49.5466742+01:00","created_by":"daemon"}]}
{"id":"LUMA-103","title":"Add luma agent --verify command","description":"","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-11-01T19:51:51.5594562+01:00","updated_at":"2025-11-01T20:24:53.0306426+01:00","closed_at":"2025-11-01T20:24:53.0306426+01:00","dependencies":[{"issue_id":"LUMA-103","depends_on_id":"LUMA-98","type":"discovered-from","created_at":"2025-11-01T19:51:51.5641179+01:00","created_by":"daemon"}]}
{"id":"LUMA-104","title":"Phase 2: Documentation \u0026 Clarity","description":"","status":"in_progress","priority":2,"issue_type":"epic","created_at":"2025-11-01T19:51:59.1823752+01:00","updated_at":"2025-11-01T20:53:33.2500954+01:00"}
{"id":"LUMA-105","title":"Phase 3: Iteration Speed \u0026 Onboarding","description":"","status":"open","priority":3,"issue_type":"epic","created_at":"2025-11-01T19:52:00.7202833+01:00","updated_at":"2025-11-01T19:52:00.7202833+01:00"}
{"id":"LUMA-106","title":"Phase 4: Advanced UX \u0026 Expansion","description":"","status":"open","priority":4,"issue_type":"epic","created_at":"2025-11-01T19:52:02.2221153+01:00","updated_at":"2025-11-01T19:52:02.2221153+01:00"}
{"id":"LUMA-107","title":"Expand explain topics for each component","description":"","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-11-01T19:52:04.6378228+01:00","updated_at":"2025-11-01T20:45:13.3673199+01:00","closed_at":"2025-11-01T20:45:13.3673199+01:00","dependencies":[{"issue_id":"LUMA-107","depends_on_id":"LUMA-104","type":"discovered-from","created_at":"2025-11-01T19:52:04.6408524+01:00","created_by":"daemon"}]}
{"id":"LUMA-108","title":"Add scaffold validate --explain mode","description":"","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-11-01T19:52:06.9244489+01:00","updated_at":"2025-11-01T20:51:17.6302955+01:00","closed_at":"2025-11-01T20:51:17.6302955+01:00","dependencies":[{"issue_id":"LUMA-108","depends_on_id":"LUMA-104","type":"discovered-from","created_at":"2025-11-01T19:52:06.9272091+01:00","created_by":"daemon"}]}
{"id":"LUMA-109","title":"Align terminology to singular 'screen'","description":"","status":"open","priority":3,"issue_type":"chore","created_at":"2025-11-01T19:52:09.3732865+01:00","updated_at":"2025-11-01T19:52:09.3732865+01:00","dependencies":[{"issue_id":"LUMA-109","depends_on_id":"LUMA-104","type":"discovered-from","created_at":"2025-11-01T19:52:09.3766094+01:00","created_by":"daemon"}]}
{"id":"LUMA-11","title":"Phase 8: Self-Description Commands","description":"Implement introspection commands per spec Section 9.7.\n\nDeliverables:\n1. Self-Description Commands (src/cli/)\n   - capabilities.command.ts - List commands, exit codes, defaults\n   - schema.command.ts - Summarize input/output schemas\n   - patterns.command.ts - List/show patterns (--list, --show Pattern)\n   - explain.command.ts - Topic-based explanations (--topic name)\n   - faq.command.ts - Q\u0026A\n\n2. Static Data (src/data/)\n   - faq.json - Common questions\n   - topics.json - Explanation topics (layout-solver, keyboard-flow, scoring, overrides, issue-fields, exit-codes, run-folders)\n   - Embedded in build\n\n3. Tests\n   - All commands return valid JSON with --json\n   - Content accuracy\n   - Coverage  70%\n\nExit: All self-description commands work, JSON valid\nTime: 2-3 days","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T13:21:33.8628251+01:00","updated_at":"2025-10-27T20:26:58.4128936+01:00","closed_at":"2025-10-27T20:26:58.4128936+01:00","dependencies":[{"issue_id":"LUMA-11","depends_on_id":"LUMA-10","type":"blocks","created_at":"2025-10-27T13:22:14.426645+01:00","created_by":"daemon"}]}
{"id":"LUMA-110","title":"Add --errors-only concise failure output","description":"","status":"open","priority":3,"issue_type":"feature","created_at":"2025-11-01T19:52:11.5261+01:00","updated_at":"2025-11-01T19:52:11.5261+01:00","dependencies":[{"issue_id":"LUMA-110","depends_on_id":"LUMA-104","type":"discovered-from","created_at":"2025-11-01T19:52:11.5296152+01:00","created_by":"daemon"}]}
{"id":"LUMA-111","title":"Add --quick and --dry-run modes","description":"","status":"open","priority":3,"issue_type":"feature","created_at":"2025-11-01T19:52:14.6256833+01:00","updated_at":"2025-11-01T19:52:14.6256833+01:00","dependencies":[{"issue_id":"LUMA-111","depends_on_id":"LUMA-105","type":"discovered-from","created_at":"2025-11-01T19:52:14.6303403+01:00","created_by":"daemon"}]}
{"id":"LUMA-112","title":"Add init --example and --examples all","description":"","status":"open","priority":2,"issue_type":"feature","created_at":"2025-11-01T19:52:15.050884+01:00","updated_at":"2025-11-01T19:52:15.050884+01:00","dependencies":[{"issue_id":"LUMA-112","depends_on_id":"LUMA-105","type":"discovered-from","created_at":"2025-11-01T19:52:15.053647+01:00","created_by":"daemon"}]}
{"id":"LUMA-113","title":"Adjust spacing scale validation to allow 0","description":"","status":"open","priority":3,"issue_type":"task","created_at":"2025-11-01T19:52:15.2831687+01:00","updated_at":"2025-11-01T19:52:15.2831687+01:00","dependencies":[{"issue_id":"LUMA-113","depends_on_id":"LUMA-105","type":"discovered-from","created_at":"2025-11-01T19:52:15.2862727+01:00","created_by":"daemon"}]}
{"id":"LUMA-114","title":"Adjust spacing scale validation to allow 0","description":"","status":"open","priority":3,"issue_type":"task","created_at":"2025-11-01T19:52:17.4925492+01:00","updated_at":"2025-11-01T19:52:17.4925492+01:00","dependencies":[{"issue_id":"LUMA-114","depends_on_id":"LUMA-105","type":"discovered-from","created_at":"2025-11-01T19:52:17.4968897+01:00","created_by":"daemon"}]}
{"id":"LUMA-115","title":"Add layout diff capability","description":"","status":"open","priority":4,"issue_type":"feature","created_at":"2025-11-01T19:52:20.4170337+01:00","updated_at":"2025-11-01T19:52:20.4170337+01:00","dependencies":[{"issue_id":"LUMA-115","depends_on_id":"LUMA-106","type":"discovered-from","created_at":"2025-11-01T19:52:20.4201766+01:00","created_by":"daemon"}]}
{"id":"LUMA-116","title":"Add human-readable score table format","description":"","status":"open","priority":4,"issue_type":"feature","created_at":"2025-11-01T19:52:20.8438601+01:00","updated_at":"2025-11-01T19:52:20.8438601+01:00","dependencies":[{"issue_id":"LUMA-116","depends_on_id":"LUMA-106","type":"discovered-from","created_at":"2025-11-01T19:52:20.8473176+01:00","created_by":"daemon"}]}
{"id":"LUMA-117","title":"Add pattern auto-detection (confidence scoring)","description":"","status":"open","priority":4,"issue_type":"feature","created_at":"2025-11-01T19:52:22.1897264+01:00","updated_at":"2025-11-01T19:52:22.1897264+01:00","dependencies":[{"issue_id":"LUMA-117","depends_on_id":"LUMA-106","type":"discovered-from","created_at":"2025-11-01T19:52:22.1925995+01:00","created_by":"daemon"}]}
{"id":"LUMA-118","title":"Add human-readable score table format","description":"","status":"open","priority":4,"issue_type":"feature","created_at":"2025-11-01T19:52:24.5520402+01:00","updated_at":"2025-11-01T19:52:24.5520402+01:00","dependencies":[{"issue_id":"LUMA-118","depends_on_id":"LUMA-106","type":"discovered-from","created_at":"2025-11-01T19:52:24.5552788+01:00","created_by":"daemon"}]}
{"id":"LUMA-119","title":"Add export --format html-prototype (foundation for future formats)","description":"","status":"open","priority":4,"issue_type":"feature","created_at":"2025-11-01T19:52:28.2837774+01:00","updated_at":"2025-11-01T19:52:28.2837774+01:00","dependencies":[{"issue_id":"LUMA-119","depends_on_id":"LUMA-106","type":"discovered-from","created_at":"2025-11-01T19:52:28.2873683+01:00","created_by":"daemon"}]}
{"id":"LUMA-12","title":"Phase 9: Report Generation","description":"Implement HTML report generation (optional feature) per spec Section 9.6.\n\nDeliverables:\n1. Report Generator (src/core/report/)\n   - template.ts - HTML template (embedded)\n   - render.ts - Aggregate data from run folder\n   - Summary: scores, issues by severity, per-viewport results\n   - Issue grouping and formatting\n\n2. CLI Command\n   - report.command.ts - Generate report.html\n   - --out parameter for output path\n\n3. Tests\n   - Report contains all sections\n   - HTML is valid\n   - Issues displayed correctly\n   - Coverage  70%\n\nExit: luma report works, HTML readable\nTime: 2-3 days","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-27T13:22:14.5901182+01:00","updated_at":"2025-10-27T20:35:37.6172309+01:00","closed_at":"2025-10-27T20:35:37.6172309+01:00","dependencies":[{"issue_id":"LUMA-12","depends_on_id":"LUMA-11","type":"blocks","created_at":"2025-10-27T13:22:41.5851139+01:00","created_by":"daemon"}]}
{"id":"LUMA-120","title":"Deduplicate suggestPatterns logic in patterns.command.ts","description":"","status":"closed","priority":1,"issue_type":"chore","created_at":"2025-11-01T20:37:33.3943231+01:00","updated_at":"2025-11-01T20:39:08.7158332+01:00","closed_at":"2025-11-01T20:39:08.7158332+01:00","dependencies":[{"issue_id":"LUMA-120","depends_on_id":"LUMA-98","type":"discovered-from","created_at":"2025-11-01T20:37:33.3973389+01:00","created_by":"daemon"}]}
{"id":"LUMA-121","title":"Fix PowerShell chaining example in QUICKSTART","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-11-01T20:53:58.4629359+01:00","updated_at":"2025-11-01T20:54:14.9354469+01:00","closed_at":"2025-11-01T20:54:14.9354469+01:00","dependencies":[{"issue_id":"LUMA-121","depends_on_id":"LUMA-104","type":"discovered-from","created_at":"2025-11-01T20:53:58.4702076+01:00","created_by":"daemon"}]}
{"id":"LUMA-122","title":"Investigate CLI spawn performance regression (median \u003e800ms)","description":"","status":"open","priority":3,"issue_type":"task","created_at":"2025-11-01T20:57:26.1400494+01:00","updated_at":"2025-11-01T20:57:26.1400494+01:00","dependencies":[{"issue_id":"LUMA-122","depends_on_id":"LUMA-104","type":"discovered-from","created_at":"2025-11-01T20:57:26.1429248+01:00","created_by":"daemon"}]}
{"id":"LUMA-13","title":"Phase 10: Integration \u0026 Polish","description":"End-to-end testing, documentation, examples, performance optimization.\n\nDeliverables:\n1. Integration Tests (tests/integration/)\n   - Full workflow: ingest  layout  keyboard  flow  score\n   - Happy path (Appendix A example from spec)\n   - Error scenarios\n   - Multiple viewports\n   - Pattern failures\n\n2. Example Scaffolds (examples/)\n   - happy-form.json - Valid form\n   - overflow-table.json - Table overflow issue\n   - keyboard-issues.json - Flow problems\n   - pattern-failures.json - MUST violations\n\n3. Documentation\n   - Update README with installation\n   - Create QUICKSTART.md\n   - API documentation\n   - Document each Issue ID\n\n4. Performance Optimization\n   - Profile against targets: ingest \u003c100ms, layout \u003c200ms, keyboard \u003c50ms, flow \u003c100ms\n   - Optimize hot paths\n\n5. CLI Polish\n   - Progress indicators\n   - Better error messages\n   - Help text\n   - --version flag\n\nExit: All integration tests pass, coverage 80%, performance targets met, docs complete\nTime: 4-5 days","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T13:22:41.7787004+01:00","updated_at":"2025-10-27T20:42:14.9175551+01:00","closed_at":"2025-10-27T20:42:14.9175551+01:00","dependencies":[{"issue_id":"LUMA-13","depends_on_id":"LUMA-12","type":"blocks","created_at":"2025-10-27T13:22:58.1051413+01:00","created_by":"daemon"}]}
{"id":"LUMA-14","title":"Add init command for project initialization","description":"","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-27T20:51:37.5367056+01:00","updated_at":"2025-10-27T20:56:54.9705131+01:00","closed_at":"2025-10-27T20:56:54.9705131+01:00"}
{"id":"LUMA-15","title":"LUMA v1.1: Scaffold Contract Topic","description":"Add scaffold-contract topic to explain command with canonical contract text. Create AGENT-RULES-SCAFFOLD.md file. Files: src/data/topics.json, AGENT-RULES-SCAFFOLD.md. Est: 2 hours","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-28T08:31:34.7502653+01:00","updated_at":"2025-10-28T09:08:09.1549364+01:00","closed_at":"2025-10-28T09:08:09.1549364+01:00"}
{"id":"LUMA-16","title":"LUMA v1.1: Golden Template","description":"Create templates/golden.todo.mock.json with pre-validated scaffold. Add golden-template topic to explain. Must pass ingest/layout/flow. Est: 4 hours","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-28T08:31:50.3061+01:00","updated_at":"2025-10-28T09:34:08.6780328+01:00","closed_at":"2025-10-28T09:34:08.6780328+01:00"}
{"id":"LUMA-17","title":"LUMA v1.1: scaffold new command (basic patterns)","description":"Implement luma scaffold new with todo-list and empty-screen patterns. Files: src/cli/scaffold.command.ts, src/core/scaffold/generator.ts, src/core/scaffold/patterns.ts, test/scaffold.test.ts. Validate at generation time. Est: 8 hours","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-28T08:32:16.9102316+01:00","updated_at":"2025-10-28T10:16:23.7548366+01:00","closed_at":"2025-10-28T10:16:23.7548366+01:00"}
{"id":"LUMA-18","title":"LUMA v1.1: Phase 1 Integration Tests","description":"Create integration tests for Phase 1 features. Test generated scaffolds through full pipeline. Files: test/integration/v1.1-phase1.test.ts. Est: 2 hours","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-28T08:32:21.9777071+01:00","updated_at":"2025-10-28T10:28:48.719429+01:00","closed_at":"2025-10-28T10:28:48.719429+01:00"}
{"id":"LUMA-19","title":"LUMA v1.1: Phase 1 Integration Tests","description":"Create integration tests for Phase 1 features. Test generated scaffolds through full pipeline. Depends on LUMA-15, LUMA-16, LUMA-17. Files: test/integration/v1.1-phase1.test.ts. Est: 2 hours","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-28T08:32:25.7681192+01:00","updated_at":"2025-10-28T10:26:31.3520892+01:00","closed_at":"2025-10-28T10:26:31.3520892+01:00"}
{"id":"LUMA-2","title":"Phase 1: Project Setup \u0026 Core Types","description":"Establish project foundation, tooling, and type system.\n\nDeliverables:\n1. Project Scaffolding\n   - Initialize npm/package.json with TypeScript, Commander.js, Vitest, Zod\n   - Configure TypeScript (tsconfig.json - strict mode, ES2022 target)\n   - Set up build scripts (tsc + esbuild)\n   - Configure ESLint + Prettier\n   - Set up Vitest test runner\n\n2. Type Definitions (src/types/)\n   - scaffold.ts - Complete Scaffold JSON types (schemaVersion, screen, settings)\n   - node.ts - All node type interfaces (Stack, Grid, Box, Text, Button, Field, Form, Table)\n   - issue.ts - Canonical Issue object shape (id, severity, message, nodeId, jsonPointer, viewport, details, source, suggestion)\n   - viewport.ts - Viewport \u0026 Frame types\n   - pattern.ts - Pattern rule types (MUST/SHOULD)\n   - output.ts - Command output types\n\n3. Utilities (src/utils/)\n   - run-folder.ts - Run folder management (timestamp generation, path creation for .ui/runs/\u003ctimestamp\u003e/)\n   - exit-codes.ts - Exit code constants (0=success, 2=invalid, 3=blocking, 4=internal, 5=version)\n   - json-pointer.ts - JSON pointer utilities for issue reporting\n   - logger.ts - Simple logging utility\n\nExit Criteria:\n npm run build compiles successfully\n npm test runs (even with no tests yet)\n All types exported and linted\n Run folder creation works\n\nEstimated: 3-5 days","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T13:15:57.1386044+01:00","updated_at":"2025-10-27T13:43:18.2261174+01:00","closed_at":"2025-10-27T13:43:18.2261174+01:00"}
{"id":"LUMA-20","title":"LUMA v1.1: Enhanced Error Structure (Core)","description":"Extend Issue type with jsonPointer, expected, found fields. Update validator to populate new fields. Files: src/types/issue.ts, src/core/ingest/validator.ts. Est: 6 hours","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-28T08:32:40.993147+01:00","updated_at":"2025-10-28T09:42:56.232584+01:00","closed_at":"2025-10-28T09:42:56.232584+01:00"}
{"id":"LUMA-21","title":"LUMA v1.1: Error Enhancement Wrapper","description":"Create error enhancer with suggestion/nextAction logic. Add --all-issues, --no-suggest, --format flags. Integrate into ingest command. Files: src/core/ingest/error-enhancer.ts, src/cli/ingest.command.ts, test/error-enhancer.test.ts. Depends on LUMA-20. Est: 5 hours","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-28T08:32:47.0812974+01:00","updated_at":"2025-10-28T09:51:51.6943739+01:00","closed_at":"2025-10-28T09:51:51.6943739+01:00"}
{"id":"LUMA-22","title":"LUMA v1.1: Backward Compatibility Tests","description":"Create regression tests for all v1.0 scaffolds. Verify identical behavior under v1.1. Files: test/compatibility/v1.0-scaffolds.test.ts. Depends on LUMA-20, LUMA-21. Est: 2 hours","status":"closed","priority":0,"issue_type":"task","created_at":"2025-10-28T08:32:52.191997+01:00","updated_at":"2025-10-28T09:59:19.3992787+01:00","closed_at":"2025-10-28T09:59:19.3992787+01:00"}
{"id":"LUMA-23","title":"LUMA v1.1: Snippets Pack","description":"Create 6 JSON snippets: stack.vertical, stack.horizontal.toolbar, form.basic, table.simple, button.primary, field.email. Create snippets/index.json. Add snippets topic to explain. Files in snippets/ directory. Est: 6 hours","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-28T08:32:58.2168951+01:00","updated_at":"2025-10-28T15:27:13.4799563+01:00","closed_at":"2025-10-28T15:27:13.4799563+01:00"}
{"id":"LUMA-24","title":"LUMA v1.1: Expand scaffold new patterns","description":"Add form-basic and table-simple patterns to scaffold new command. Use snippets as building blocks. Files: src/core/scaffold/patterns.ts. Depends on LUMA-17, LUMA-23. Est: 4 hours","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-28T08:34:16.4675865+01:00","updated_at":"2025-10-28T19:13:22.7837623+01:00","closed_at":"2025-10-28T19:13:22.7837623+01:00"}
{"id":"LUMA-25","title":"LUMA v1.1: Snippets Integration Tests","description":"Test inserting each snippet into golden template. Test composing scaffolds from multiple snippets. Files: test/integration/snippets.test.ts. Depends on LUMA-23, LUMA-24. Est: 3 hours","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-28T08:34:20.9554484+01:00","updated_at":"2025-10-28T19:33:08.3906302+01:00","closed_at":"2025-10-28T19:33:08.3906302+01:00"}
{"id":"LUMA-26","title":"LUMA v1.1: Update AGENTS.md","description":"Add Preflight section with scaffold contract reference. Add example workflow using scaffold new. Update existing sections. Files: AGENTS.md. Est: 2 hours","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-28T08:34:25.8273429+01:00","updated_at":"2025-10-28T20:16:00.3975568+01:00","closed_at":"2025-10-28T20:16:00.3975568+01:00"}
{"id":"LUMA-27","title":"LUMA v1.1: Update README and QUICKSTART","description":"Add v1.1 feature highlights to README. Update QUICKSTART with scaffold new examples. Link to new topics. Files: README.md, QUICKSTART.md. Est: 2 hours","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-28T08:34:30.3939401+01:00","updated_at":"2025-10-28T20:24:28.6503319+01:00","closed_at":"2025-10-28T20:24:28.6503319+01:00"}
{"id":"LUMA-28","title":"LUMA v1.1: Version Bump and Changelog","description":"Bump package.json to 1.1.0. Create/update CHANGELOG.md with v1.1 additions. Files: package.json, CHANGELOG.md. Est: 1 hour","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-28T08:34:34.4103588+01:00","updated_at":"2025-10-28T10:31:27.8815966+01:00","closed_at":"2025-10-28T10:31:27.8815966+01:00"}
{"id":"LUMA-29","title":"LUMA v1.1: Final Integration Test","description":"End-to-end workflow test: read contract, generate scaffold, validate, insert snippets, run full pipeline. Verify all exit codes and outputs. Files: test/integration/v1.1-complete.test.ts. Depends on all features. Est: 2 hours","status":"closed","priority":0,"issue_type":"task","created_at":"2025-10-28T08:34:39.7114495+01:00","updated_at":"2025-10-28T19:03:22.984627+01:00","closed_at":"2025-10-28T19:03:22.984627+01:00"}
{"id":"LUMA-3","title":"Phase 2: Ingest Command Implementation","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T13:16:21.3912278+01:00","updated_at":"2025-10-27T13:23:07.5311674+01:00","closed_at":"2025-10-27T13:23:07.5311674+01:00"}
{"id":"LUMA-30","title":"Fix example scaffolds to match v1.0 schema","description":"","status":"closed","priority":0,"issue_type":"bug","created_at":"2025-10-28T09:09:36.545414+01:00","updated_at":"2025-10-28T09:23:51.2475115+01:00","closed_at":"2025-10-28T09:23:51.2475115+01:00"}
{"id":"LUMA-31","title":"Fix run folder architecture - commands should share same run folder","description":"","status":"closed","priority":0,"issue_type":"bug","created_at":"2025-10-28T09:25:12.4047949+01:00","updated_at":"2025-10-28T09:27:57.3498993+01:00","closed_at":"2025-10-28T09:27:57.3498993+01:00"}
{"id":"LUMA-32","title":"Add 'luma schema' command with component property documentation","description":"CRITICAL: Agent feedback shows component property documentation is the #1 blocker.\n\nGOAL: Create 'luma schema' command that shows valid properties, examples, and structure for all component types.\n\nFILES TO CREATE/MODIFY:\n- src/cli/schema.command.ts (enhance existing)\n- src/data/component-schemas.json (new - property definitions)\n- test/schema.test.ts (add tests for new functionality)\n\nREQUIREMENTS:\n\n1. Component Property Reference:\n   luma schema --component Text --json\n   Output: {type:'Text', properties:{text:'string',fontSize:'number'}, required:['text'], example:{...}}\n\n2. Show Examples:\n   luma schema --component Form --examples\n   Output: Working Form component with fields[] and actions[] properly structured\n\n3. List All Components:\n   luma schema --list\n   Output: [Text, Button, Field, Form, Table, Stack, Grid, Box]\n\n4. Common Mistakes Section:\n   For each component, document common errors like:\n   - Text: Use 'text' not 'content' or 'label'\n   - Button: Use 'text' not 'label', use 'roleHint' not 'variant'\n   - Table: columns must be string array not object array\n\nACCEPTANCE CRITERIA:\n- luma schema --list shows all component types\n- luma schema --component \u003ctype\u003e shows properties with types\n- luma schema --component \u003ctype\u003e --examples shows working examples\n- All components documented: Text, Button, Field, Form, Table, Stack, Grid, Box\n- Form structure clearly shows fields[] and actions[] requirements\n- Common mistakes listed for each component\n\nREFERENCE: LUMA_EVALUATION_REPORT.md Section 1","status":"closed","priority":0,"issue_type":"feature","created_at":"2025-10-28T12:37:42.6465036+01:00","updated_at":"2025-10-28T13:37:34.7396908+01:00","closed_at":"2025-10-28T13:37:34.7396908+01:00"}
{"id":"LUMA-33","title":"Investigate and fix Form component validation","description":"CRITICAL: Agent tried 6+ approaches to create Form component, all failed with 'invalid_union' error.\n\nGOAL: Investigate Form component validation and either fix it or document why it doesn't work.\n\nFILES TO INVESTIGATE:\n- src/core/ingest/validator.ts (Form validation logic)\n- src/types/node.ts (Form type definition)\n- examples/happy-form.json (existing Form example)\n- templates/golden.todo.mock.json (check if it uses Form)\n\nINVESTIGATION STEPS:\n\n1. Check if Form validation is implemented:\n   - Search for Form in validator.ts\n   - Check if Form is in the Zod schema union\n   - Verify Form type definition exists in node.ts\n\n2. Test existing Form examples:\n   - Run 'luma ingest examples/happy-form.json'\n   - Check if any examples have working Form components\n   - Document the exact structure that works\n\n3. Identify the issue:\n   - Is Form not implemented in validator?\n   - Is Form structure documented incorrectly?\n   - Is there a bug in Form validation?\n\n4. Create working Form examples:\n   - Document exact structure for fields[]\n   - Document exact structure for actions[]\n   - Show nested vs flat field definitions\n\nEXPECTED FINDINGS:\nOne of these scenarios:\nA) Form validation not implemented  Add to validator\nB) Form works but structure undocumented  Add docs/examples\nC) Form has bugs  Fix validation logic\n\nACCEPTANCE CRITERIA:\n- Documented finding: Why Form validation fails\n- If Form works: Add working example to component-schemas.json\n- If Form broken: Create issue to fix it with specific requirements\n- Test case showing valid Form component passing validation\n\nREFERENCE: LUMA_EVALUATION_REPORT.md Section 3 - shows all failed Form attempts","status":"closed","priority":0,"issue_type":"bug","created_at":"2025-10-28T12:42:37.9386923+01:00","updated_at":"2025-10-28T12:57:28.946574+01:00","closed_at":"2025-10-28T12:57:28.946574+01:00"}
{"id":"LUMA-34","title":"Enhance validation error messages with specific property guidance","description":"Agent feedback: Error messages like 'Invalid input' and 'none of the union members matched' don't help debug issues.\n\nGOAL: Enhance error messages to provide specific, actionable guidance.\n\nFILES TO MODIFY:\n- src/core/ingest/error-enhancer.ts (already exists)\n- src/core/ingest/validator.ts (error generation)\n\nCURRENT ERRORS (Unhelpful):\n- 'Invalid input' at '/screen/root'\n- 'none of the union members matched'\n\nDESIRED ERRORS (Actionable):\n- 'Form.fields[0]: property 'type' not allowed, use 'label' instead'\n- 'Button: property 'variant' not supported, use 'roleHint' instead'\n- 'Table.columns: expected string array, got object array'\n- 'Text: property 'content' invalid, use 'text' instead'\n\nIMPLEMENTATION APPROACH:\n\n1. Property Name Mapping:\n   - Detect common wrong property names\n   - Map to correct alternatives\n   - Example: contenttext, labeltext, variantroleHint\n\n2. Type Mismatch Details:\n   - Show expected type vs received type\n   - Example: 'columns: expected string[], got object[]'\n\n3. Union Member Hints:\n   - Instead of 'none matched', list valid types\n   - Example: 'Expected one of: Stack, Grid, Form, Table, Text, Button'\n\n4. Component-Specific Suggestions:\n   - Maintain map of common mistakes per component\n   - Suggest fixes based on error context\n\nERROR ENHANCEMENT MAP:\n{\n  'Text': {\n    'content': 'Use text property instead',\n    'label': 'Use text property instead',\n    'fontWeight': 'Property not supported, use fontSize'\n  },\n  'Button': {\n    'label': 'Use text property instead',\n    'variant': 'Use roleHint property instead'\n  },\n  'Table': {\n    'columns[].id': 'columns should be string array, not objects'\n  }\n}\n\nACCEPTANCE CRITERIA:\n- Wrong property names suggest correct alternatives\n- Union errors list valid component types\n- Type mismatches show expected vs actual\n- At least 10 common mistakes have specific messages\n- Test cases for each error enhancement\n\nEST: 4 hours\nREFERENCE: LUMA_EVALUATION_REPORT.md Section 2 and Appendix error log","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-28T12:43:12.7850463+01:00","updated_at":"2025-10-28T14:14:00.2194656+01:00","closed_at":"2025-10-28T14:14:00.2194656+01:00"}
{"id":"LUMA-35","title":"Add scaffold patterns: contact-form, data-table-with-actions, modal-dialog, etc","description":"Agent found pattern generation much more useful than manual creation. Add more specific patterns.\n\nGOAL: Expand scaffold pattern library with real-world UI patterns.\n\nFILES TO MODIFY:\n- src/core/scaffold/patterns.ts (add new patterns)\n- test/scaffold.test.ts (add tests)\n\nNEW PATTERNS TO ADD:\n\n1. contact-form\n   - Form with name, email, phone fields\n   - Save and cancel actions\n   - Proper field types and validation hints\n\n2. data-table-with-actions\n   - Table with multiple columns\n   - Action buttons per row (edit, delete)\n   - Responsive scroll strategy\n\n3. modal-dialog\n   - Centered Box container\n   - Title, content area, action buttons\n   - Proper modal structure\n\n4. login-form\n   - Username/email field\n   - Password field\n   - Submit and forgot password actions\n\n5. multi-step-form\n   - Stack with multiple Form sections\n   - Navigation buttons (next, previous, submit)\n   - Step indicator\n\n6. dashboard-grid\n   - Grid layout with multiple widget areas\n   - Card-style boxes\n   - Responsive grid columns\n\nIMPLEMENTATION:\n- Each pattern should pass luma ingest\n- Each pattern should score  85\n- Include customization options (title, field names, etc.)\n- Document pattern purpose and use cases\n\nPATTERN STRUCTURE:\nexport function generateContactFormPattern(options: PatternOptions): Scaffold {\n  return {\n    schemaVersion: '1.0.0',\n    screen: {\n      id: options.screenId || 'contact-form',\n      title: options.title || 'Contact Form',\n      root: { /* Working Form structure */ }\n    },\n    settings: { /* Standard settings */ }\n  };\n}\n\nACCEPTANCE CRITERIA:\n- 6 new patterns added and tested\n- Each pattern passes validation (score  85)\n- Patterns documented in luma patterns command\n- Examples show in luma schema --examples\n- Integration tests for each pattern\n\nEST: 8 hours\nDEPENDS: LUMA-33 (need working Form structure)\nREFERENCE: LUMA_EVALUATION_REPORT.md Recommendation 4","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-28T12:43:49.4768461+01:00","updated_at":"2025-10-28T19:22:27.8442751+01:00","closed_at":"2025-10-28T19:22:27.8442751+01:00"}
{"id":"LUMA-36","title":"Add component property topics to 'luma explain'","description":"Add component property examples to existing 'luma explain' topics for quick reference.\n\nGOAL: Enhance existing explain topics with component property examples.\n\nFILES TO MODIFY:\n- src/data/topics.json (add component examples)\n\nNEW TOPICS TO ADD:\n\n1. component-text\n   - All Text component properties\n   - Valid values and types\n   - Common mistakes\n   - Working examples\n\n2. component-button\n   - All Button properties\n   - roleHint values\n   - Examples with different roles\n\n3. component-table\n   - Table structure\n   - columns array format (string[])\n   - responsive.strategy options\n   - minColumnWidth usage\n\n4. component-form\n   - Form structure (once LUMA-33 resolved)\n   - fields[] format\n   - actions[] format\n   - Complete working example\n\n5. component-stack\n   - direction property\n   - gap and padding\n   - children nesting\n\n6. component-grid\n   - columns and rows\n   - gap property\n   - responsive behavior\n\nIMPLEMENTATION:\nEach topic should include:\n- Property list with types\n- Required vs optional properties\n- Valid enum values\n- Common mistakes section\n- 2-3 working examples\n\nTOPIC FORMAT:\n{\n  'component-text': {\n    'title': 'Text Component',\n    'summary': 'Display text content with optional styling',\n    'details': [\n      'Properties:',\n      '- id (string, required): Unique identifier',\n      '- type (string, required): Must be 'Text'',\n      '- text (string, required): Content to display',\n      '- fontSize (number, optional): Font size in pixels',\n      '- align (string, optional): left|center|right',\n      '',\n      'Common Mistakes:',\n      '- Using content instead of text',\n      '- Using fontWeight (not supported)',\n      '',\n      'Example: {id:title,type:Text,text:Hello World,fontSize:24}'\n    ]\n  }\n}\n\nACCEPTANCE CRITERIA:\n- 6 new component topics added\n- Each accessible via luma explain --topic component-\u003cname\u003e\n- All include properties, mistakes, and examples\n- JSON output supported\n- Topics listed in luma explain\n\nEST: 3 hours\nCOMPLEMENTS: LUMA-32 (schema command)\nREFERENCE: LUMA_EVALUATION_REPORT.md Recommendation 1","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-28T12:44:16.5760532+01:00","updated_at":"2025-10-28T14:52:50.0164521+01:00","closed_at":"2025-10-28T14:52:50.0164521+01:00"}
{"id":"LUMA-37","title":"Fix 4 pre-existing test failures (timeouts and assertion errors)","description":"Four integration tests were failing before LUMA-25 work: 1) test/schema.test.ts 'should document all 8 component types' - timeout after 5000ms. 2) test/schema.test.ts 'should provide working examples for all components' - timeout after 5000ms. 3) tests/integration/v1.1-complete.test.ts 'should run complete pipeline on golden template' - tablePattern undefined assertion failure. 4) tests/integration/v1.1-phase1.test.ts 'should demonstrate agent workflow' - timeout after 5000ms. These are unrelated to snippets work. Files: test/schema.test.ts, tests/integration/v1.1-complete.test.ts, tests/integration/v1.1-phase1.test.ts","status":"closed","priority":2,"issue_type":"bug","created_at":"2025-10-28T19:37:55.6380711+01:00","updated_at":"2025-10-28T20:01:29.2985003+01:00","closed_at":"2025-10-28T20:01:29.2985003+01:00"}
{"id":"LUMA-38","title":"Fix failing test: golden template scoring below minimum","description":"","status":"closed","priority":1,"issue_type":"bug","created_at":"2025-10-28T20:27:42.5013283+01:00","updated_at":"2025-10-28T20:36:56.3066684+01:00","closed_at":"2025-10-28T20:36:56.3066684+01:00"}
{"id":"LUMA-39","title":"Fix AGENT-RULES-SCAFFOLD.md component schema errors","description":"","status":"closed","priority":0,"issue_type":"bug","created_at":"2025-10-29T07:21:38.4872596+01:00","updated_at":"2025-10-29T07:36:03.8117787+01:00","closed_at":"2025-10-29T07:36:03.8117787+01:00"}
{"id":"LUMA-4","title":"Phase 2: Ingest Command Implementation","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T13:16:26.0068269+01:00","updated_at":"2025-10-27T13:23:07.5367327+01:00","closed_at":"2025-10-27T13:23:07.5367327+01:00"}
{"id":"LUMA-40","title":"Fix AGENT-RULES-SCAFFOLD.md component schema errors","description":"CRITICAL: AGENT-RULES-SCROLL.md contains factual errors causing validation failures for AI agents.\n\nERRORS FOUND (verified against src/core/ingest/validator.ts):\n\n1. Button Component (Lines 45-46):\n   -  WRONG: Says Button needs 'label' (required)\n   -  CORRECT: Button uses 'text' (optional)\n   -  WRONG: Says 'role' property\n   -  CORRECT: Uses 'roleHint' property\n\n2. Field Component (Lines 49-50):\n   -  WRONG: Says 'fieldType' property exists\n   -  CORRECT: Uses 'inputType' property\n   - Missing: 'helpText' and 'errorText' optional properties\n\n3. Table Component (Lines 60-61):\n   -  WRONG: Says columns are objects with 'key' and 'label'\n   -  CORRECT: Columns are string array: ['Name', 'Email']\n\n4. Example Scaffold (Lines 100-140):\n   -  WRONG: Uses Button with 'label' property\n   -  CORRECT: Should use 'text' property\n\nIMPACT:\n- AI agents spend 40% of dev time on trial-and-error\n- Multiple validation iteration cycles\n- Confusion and frustration\n\nREQUIRED CHANGES:\n\nFile: AGENT-RULES-SCAFFOLD.md\n\nSection: Button (around line 45):\nREPLACE:\n- Required: type, id, label (non-empty string)\n- Optional: role (primary, secondary, danger, link)\n\nWITH:\n- Required: type, id\n- Optional: text (string), roleHint (primary, secondary, danger, link), focusable (boolean), tabIndex (number)\n\nSection: Field (around line 49):\nREPLACE:\n- Required: type, id, label (non-empty string), fieldType (text, email, password, number, tel, date, checkbox)\n- Optional: required (boolean), placeholder\n\nWITH:\n- Required: type, id, label (non-empty string)\n- Optional: inputType (text, email, password, number, date), required (boolean), helpText (string), errorText (string), focusable (boolean)\n\nSection: Table (around line 60):\nREPLACE:\nEach column must have: key (string), label (string)\n\nWITH:\ncolumns is a string array: ['Name', 'Email', 'Role']\n\nSection: Example Scaffold (around line 125):\nREPLACE:\n{\n  'type': 'Button',\n  'id': 'action-button',\n  'label': 'Click Me',\n  'role': 'primary'\n}\n\nWITH:\n{\n  'type': 'Button',\n  'id': 'action-button',\n  'text': 'Click Me',\n  'roleHint': 'primary'\n}\n\nTESTING:\n1. Verify example scaffold passes: luma ingest\n2. Cross-check all properties against src/core/ingest/validator.ts\n3. Ensure no conflicting info with AGENTS.md","status":"closed","priority":0,"issue_type":"bug","created_at":"2025-10-29T07:21:52.6915474+01:00","updated_at":"2025-10-29T07:35:52.3005336+01:00","closed_at":"2025-10-29T07:35:52.3005336+01:00","dependencies":[{"issue_id":"LUMA-40","depends_on_id":"LUMA-46","type":"parent-child","created_at":"2025-10-29T07:27:18.5462858+01:00","created_by":"daemon"}]}
{"id":"LUMA-41","title":"Add component schema quick reference to AGENTS.md","description":"HIGH PRIORITY: Add comprehensive component schema reference to AGENTS.md to reduce trial-and-error time by 40%.\n\nIMPACT: AI agents currently spend 40% of development time discovering component properties through trial-and-error.\n\nLOCATION: AGENTS.md - Add new section after Preflight section (around line 70)\n\nSECTION TITLE: Component Schema Quick Reference\n\nCONTENT TO ADD:\n\n## Component Schema Quick Reference\n\nBefore writing scaffold JSON, learn valid component properties to avoid trial-and-error.\n\n### Discovery Commands\nluma explain --topic component-text --json\nluma explain --topic component-button --json\nluma explain --topic component-field --json\nluma explain --topic component-form --json\nluma explain --topic component-table --json\nluma explain --topic component-stack --json\n\n### Common Property Mistakes Table\n\nComponent | Correct | Wrong\nText | text | content, label\nButton | text | label\nButton | roleHint | variant, role\nField | inputType | fieldType\nTable | columns array | columns objects\n\nInclude full schemas for all 8 component types with:\n- Required properties\n- Optional properties\n- Valid enum values\n- Common mistakes\n- Complete JSON examples\n\nACCEPTANCE CRITERIA:\n- All 8 component types documented\n- Properties match src/core/ingest/validator.ts exactly\n- Mistake table included\n- No conflicts with AGENT-RULES-SCAFFOLD.md\n- Examples pass luma ingest validation\n\nDEPENDS ON: LUMA-40 must be fixed first\n\nESTIMATED TIME: 45 minutes","status":"closed","priority":0,"issue_type":"task","created_at":"2025-10-29T07:22:21.3646142+01:00","updated_at":"2025-10-29T07:43:02.4422549+01:00","closed_at":"2025-10-29T07:43:02.4422549+01:00","dependencies":[{"issue_id":"LUMA-41","depends_on_id":"LUMA-40","type":"blocks","created_at":"2025-10-29T07:23:06.3349846+01:00","created_by":"daemon"},{"issue_id":"LUMA-41","depends_on_id":"LUMA-46","type":"parent-child","created_at":"2025-10-29T07:27:22.2067161+01:00","created_by":"daemon"}]}
{"id":"LUMA-42","title":"Add pipeline command chaining examples to AGENTS.md","description":"HIGH PRIORITY: Add command chaining examples to prevent scattered run folders and enable scoring.\n\nPROBLEM: Each LUMA command creates a new timestamped run folder. When run separately, scoring fails because artifacts are scattered across folders.\n\nAI agent spent 15% of dev time discovering this workaround.\n\nLOCATION: AGENTS.md - Update workflow example section\n\nCONTENT TO ADD:\n\n### Running Complete Pipeline (Same Run Folder)\n\nIMPORTANT: Chain commands so they write to the same run folder.\n\nWindows PowerShell:\nluma ingest contact.json; backtick\nluma layout contact.json --viewports 320x640,768x1024; backtick\nluma keyboard contact.json; backtick\nluma flow contact.json --patterns Form.Basic\n\nmacOS/Linux:\nluma ingest contact.json \u0026\u0026 backslash\nluma layout contact.json --viewports 320x640,768x1024 \u0026\u0026 backslash\nluma keyboard contact.json \u0026\u0026 backslash\nluma flow contact.json --patterns Form.Basic\n\nThen score the run:\nluma score .ui/runs/\u003crun-id\u003e\n\nWHY THIS MATTERS:\n- Each command creates new run folder with timestamp\n- Scoring requires all artifacts in same folder\n- Chaining ensures sequential execution in same run\n\nCOMMON ERROR:\nError: .ui/runs/20251029-070139-805/keyboard.json not found\nThis means you ran commands separately. Re-run as a chain.\n\nACCEPTANCE CRITERIA:\n- Windows PowerShell backtick syntax shown\n- Linux/Mac \u0026\u0026 syntax shown\n- Explanation of why chaining needed\n- Common error documented\n- Examples tested on both platforms\n\nESTIMATED TIME: 20 minutes","status":"closed","priority":0,"issue_type":"task","created_at":"2025-10-29T07:23:10.8927367+01:00","updated_at":"2025-10-29T07:36:56.2968271+01:00","closed_at":"2025-10-29T07:36:56.2968271+01:00","dependencies":[{"issue_id":"LUMA-42","depends_on_id":"LUMA-46","type":"parent-child","created_at":"2025-10-29T07:27:22.4503517+01:00","created_by":"daemon"}]}
{"id":"LUMA-43","title":"Add debugging/troubleshooting guide to AGENTS.md","description":"MEDIUM PRIORITY: Add comprehensive debugging guide to reduce validation iteration cycles.\n\nIMPACT: AI agents iterate multiple times on validation without understanding errors.\n\nLOCATION: AGENTS.md - Add new section after component schemas\n\nSECTION TITLE: Debugging Failed Validation\n\nCONTENT TO ADD:\n\n### If luma ingest Fails\n\n1. Check error details:\n   cat .ui/runs/\u003crun-id\u003e/ingest.json\n\n2. Interpret jsonPointer:\n   - /screen/root/children/3 means 4th child (0-indexed)\n   - /screen/root/children/0/text means first child text property\n\n3. Common Fixes:\n\nInvalid union errors:\n- Wrong property name or type\n- Text: use text not content\n- Button: use text not label\n- Button: use roleHint not variant\n\nRequired property missing:\n- Form needs states array with default\n- Form needs at least 1 field and 1 action\n- Field needs label (non-empty)\n- Table needs title, columns, responsive.strategy\n\nInvalid type:\n- Table columns must be strings: [Name, Email]\n- Not objects: [{key: col1, header: Name}]\n\n### If luma score is \u003c 85\n\nCheck individual artifacts and common issues:\n- Stack padding not in spacingScale\n- Touch target \u003c 44px\n- Form actions before fields\n- Field missing label\n\n### If luma keyboard Shows Wrong Tab Order\n\nTab order follows document order. Reorder components in scaffold JSON.\n\n### Pattern Validation Failures\n\nPattern names are case-sensitive:\n- Correct: Form.Basic, Table.Simple\n- Wrong: form, table\n\nACCEPTANCE CRITERIA:\n- Error interpretation guide for jsonPointer\n- Common error table with symptoms and fixes\n- Scoring troubleshooting section\n- Pattern naming clarification\n- Real examples from feedback\n\nESTIMATED TIME: 60 minutes","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-29T07:24:14.2695437+01:00","updated_at":"2025-10-29T07:47:49.043583+01:00","closed_at":"2025-10-29T07:47:49.043583+01:00","dependencies":[{"issue_id":"LUMA-43","depends_on_id":"LUMA-46","type":"parent-child","created_at":"2025-10-29T07:27:22.7039593+01:00","created_by":"daemon"}]}
{"id":"LUMA-44","title":"Add complete minimal valid scaffold example to AGENTS.md","description":"MEDIUM PRIORITY: Add working example scaffold to provide starting point for AI agents.\n\nIMPACT: Agents need a complete working example to understand structure.\n\nLOCATION: AGENTS.md - Add after Preflight section\n\nSECTION TITLE: Complete Minimal Valid Scaffold\n\nCONTENT TO ADD:\n\nProvide a minimal scaffold that:\n- Passes luma ingest validation\n- Gets 100/100 score through full pipeline\n- Shows all required sections\n- Uses correct property names\n- Demonstrates best practices\n\nInclude:\n- Full JSON example (Stack with Text and Button)\n- Explanation of key elements\n- Testing commands to verify it works\n\nExample structure:\n{\n  schemaVersion: 1.0.0,\n  screen: {\n    id: example-screen,\n    title: Example,\n    root: Stack with children\n  },\n  settings: {\n    spacingScale: [4, 8, 12, 16, 24, 32],\n    minTouchTarget: {w: 44, h: 44},\n    breakpoints: [320x640, 768x1024, 1280x800]\n  }\n}\n\nACCEPTANCE CRITERIA:\n- Example passes luma ingest\n- Example gets 100/100 score\n- All required sections present\n- Uses correct component properties (text not label)\n- Testing commands included\n\nDEPENDS ON: LUMA-40 and LUMA-41 (correct schemas first)\n\nESTIMATED TIME: 15 minutes","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-29T07:24:46.020989+01:00","updated_at":"2025-10-29T07:52:10.4905424+01:00","closed_at":"2025-10-29T07:52:10.4905424+01:00","dependencies":[{"issue_id":"LUMA-44","depends_on_id":"LUMA-40","type":"blocks","created_at":"2025-10-29T07:26:23.1054703+01:00","created_by":"daemon"},{"issue_id":"LUMA-44","depends_on_id":"LUMA-41","type":"blocks","created_at":"2025-10-29T07:26:25.7270568+01:00","created_by":"daemon"},{"issue_id":"LUMA-44","depends_on_id":"LUMA-46","type":"parent-child","created_at":"2025-10-29T07:27:22.9489614+01:00","created_by":"daemon"}]}
{"id":"LUMA-45","title":"Clarify pattern vs manual scaffold creation in AGENTS.md","description":"LOW PRIORITY: Clarify when to use pattern generation vs manual scaffold creation.\n\nIMPACT: Minor confusion about approach selection. Not blocking.\n\nLOCATION: AGENTS.md - Update Generating Scaffolds section\n\nCONTENT TO ADD:\n\n### When to Use Pattern Generation vs Manual Creation\n\nUse luma scaffold new (Pattern) when:\n- Starting a new project\n- Learning LUMA component schemas\n- Building common UI patterns (forms, tables, lists)\n- Need a valid starting point\n\nWrite JSON manually when:\n- You understand component schemas well\n- Building custom/unique layouts\n- Combining multiple patterns\n- Need fine-grained control over every property\n\nRecommended Workflow:\n1. Generate from pattern: luma scaffold new --pattern form-basic\n2. Customize the generated JSON for your needs\n3. Validate iteratively with luma ingest\n4. Run full pipeline once structure is correct\n\nACCEPTANCE CRITERIA:\n- Clear decision criteria for pattern vs manual\n- Recommended hybrid workflow shown\n- Examples of when to use each approach\n\nESTIMATED TIME: 15 minutes","status":"closed","priority":3,"issue_type":"task","created_at":"2025-10-29T07:26:29.2833996+01:00","updated_at":"2025-10-29T08:00:54.9094874+01:00","closed_at":"2025-10-29T08:00:54.9094874+01:00","dependencies":[{"issue_id":"LUMA-45","depends_on_id":"LUMA-46","type":"parent-child","created_at":"2025-10-29T07:27:23.1943453+01:00","created_by":"daemon"}]}
{"id":"LUMA-46","title":"Documentation improvements based on AI agent feedback","description":"EPIC: Implement all documentation improvements based on AI agent feedback from LUMA-WORKFLOW-FEEDBACK.md\n\nGOAL: Reduce first-time AI agent friction by ~50%\n\nBACKGROUND:\nAI agent successfully built CRM app with 100/100 LUMA score but spent:\n- 40% of dev time on component schema trial-and-error\n- 15% of dev time on pipeline execution debugging\n- Multiple validation iteration cycles\n\nCHILD TASKS:\n\nPriority 0 (Critical):\n- LUMA-40: Fix AGENT-RULES-SCAFFOLD.md component schema errors (30 min)\n- LUMA-41: Add component schema quick reference to AGENTS.md (45 min)\n- LUMA-42: Add pipeline command chaining examples (20 min)\n\nPriority 1 (High):\n- LUMA-43: Add debugging/troubleshooting guide (60 min)\n\nPriority 2 (Medium):\n- LUMA-44: Add complete minimal valid scaffold example (15 min)\n\nPriority 3 (Low):\n- LUMA-45: Clarify pattern vs manual scaffold creation (15 min)\n\nTOTAL ESTIMATED TIME: 3 hours 5 minutes\n\nSUCCESS METRICS:\nBefore: 40% time on schema issues, 15% on pipeline issues\nAfter: \u003c10% time on schema issues, \u003c5% on pipeline issues\n\nFILES TO MODIFY:\n- AGENT-RULES-SCAFFOLD.md (fix errors)\n- AGENTS.md (add all new sections)\n\nROLLOUT:\n1. Create feature branch: docs/agent-feedback-improvements\n2. Implement priority 0 tasks (critical)\n3. Test with validation examples\n4. Implement priority 1-3 tasks\n5. Cross-reference check\n6. Merge to master\n7. Update CHANGELOG.md\n8. Consider version bump","status":"closed","priority":0,"issue_type":"epic","created_at":"2025-10-29T07:26:48.1020466+01:00","updated_at":"2025-10-29T08:06:52.0077747+01:00","closed_at":"2025-10-29T08:06:52.0077747+01:00"}
{"id":"LUMA-47","title":"CORRECTION: Move component schema improvements from AGENTS.md to init.command.ts","description":"CRITICAL CORRECTION: Documentation improvements from LUMA-40 through LUMA-45 were applied to the wrong file.\n\nPROBLEM:\n- LUMA-40-45 added improvements to AGENTS.md (for LUMA project contributors)\n- BUT the AI agent feedback was about agents USING LUMA to build apps\n- Those agents get content from 'luma init' which is embedded in src/cli/init.command.ts\n\nIMPACT:\n- AI agents building apps with LUMA still have the same friction\n- Improvements are in wrong place and won't help end users\n- Need to move content to agentsContent template in init.command.ts\n\nCORRECT TARGET FILE:\nsrc/cli/init.command.ts - Line 6, agentsContent constant\n\nCHANGES NEEDED:\n\n1. Move Component Schema Quick Reference (from LUMA-41)\n   - Source: AGENTS.md lines added\n   - Destination: init.command.ts agentsContent after Preflight section\n   - Include: All 8 component schemas, property mistake table, examples\n\n2. Move Pipeline Command Chaining (from LUMA-42)\n   - Source: AGENTS.md workflow section additions\n   - Destination: init.command.ts agentsContent Step 3\n   - Include: Windows PowerShell and Linux/Mac syntax examples\n\n3. Move Debugging Guide (from LUMA-43)\n   - Source: AGENTS.md debugging section\n   - Destination: init.command.ts agentsContent new section\n   - Include: jsonPointer interpretation, common error fixes\n\n4. Move Minimal Example (from LUMA-44)\n   - Source: AGENTS.md example section\n   - Destination: init.command.ts agentsContent after contract\n   - Include: Complete working scaffold JSON\n\n5. Move Pattern Clarification (from LUMA-45)\n   - Source: AGENTS.md pattern section\n   - Destination: init.command.ts agentsContent Step 2\n   - Include: When to use patterns vs manual\n\nVERIFICATION:\n1. Run: luma init in test directory\n2. Verify generated AGENTS.md contains all improvements\n3. Test that users see new content when they initialize LUMA\n4. Original AGENTS.md can be reverted or kept for project contributors\n\nACCEPTANCE CRITERIA:\n- All improvements from LUMA-40-45 moved to init.command.ts\n- luma init generates AGENTS.md with improved content\n- End users building apps with LUMA benefit from improvements\n- DOCUMENTATION-IMPROVEMENT-PLAN.md updated to reflect correct files\n\nESTIMATED TIME: 1 hour (mostly copy/paste with template string formatting)","status":"closed","priority":0,"issue_type":"bug","created_at":"2025-10-29T08:09:56.5930094+01:00","updated_at":"2025-10-29T08:25:24.3418843+01:00","closed_at":"2025-10-29T08:25:24.3418843+01:00"}
{"id":"LUMA-48","title":"Epic: Progressive Disclosure pattern","description":"Epic: Progressive Disclosure pattern. Completion when all child issues closed, new pattern appears in: (1) luma patterns list, (2) flow.json when activated or hinted, (3) score.json pattern fidelity adjusted. Deliverables: progressive-disclosure.ts pattern module, disclosure-inference.ts, suggestions.ts additions, schema node.ts extension, validator integration, tests (passing/must-fail/should-warn/backward-compat), docs README + SPECIFICATION, CHANGELOG entry. Non-functional: deterministic inference selection, no perf regression (\u003c5% validatePatterns time increase).","status":"closed","priority":1,"issue_type":"epic","created_at":"2025-10-29T17:02:50.802717+01:00","updated_at":"2025-10-30T12:38:32.5895947+01:00","closed_at":"2025-10-30T12:38:32.5895947+01:00"}
{"id":"LUMA-49","title":"Spec ingestion \u0026 activation logic","description":"Activation \u0026 ingestion. Files: src/types/node.ts (add affordances?:string[], behaviors?.disclosure?), src/core/patterns/pattern-registry.ts (register Progressive.Disclosure under aliases progressive-disclosure, Progressive.Disclosure), cli/flow.command.ts (parse --patterns list, detect alias). Steps: (1) extend types, (2) add registry entry, (3) implement auto-detect: scan root for any node.behaviors?.disclosure?.collapsible===true; if found, inject pattern even if not requested. Acceptance: Running flow with --patterns progressive-disclosure shows pattern in flow.json patterns[], without hints and no flag pattern absent; with hint only pattern present. No existing pattern tests fail.","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-29T17:03:42.1659915+01:00","updated_at":"2025-10-29T18:46:26.1976078+01:00","closed_at":"2025-10-29T18:46:26.1976078+01:00","dependencies":[{"issue_id":"LUMA-49","depends_on_id":"LUMA-48","type":"discovered-from","created_at":"2025-10-29T17:03:42.1698071+01:00","created_by":"daemon"}]}
{"id":"LUMA-5","title":"Phase 2: Ingest Command Implementation","description":"Implement scaffold validation and normalization.\n\nDeliverables:\n1. Schema Validation (src/core/ingest/)\n   - validator.ts - Zod schemas for all node types\n   - schema-version.ts - Version check (support 1.0.0)\n   - normalize.ts - Apply defaults\n\n2. Ingest Logic\n   - ingest.ts - Main orchestrator\n   - Validate required fields\n   - Check node ID uniqueness\n   - Validate enums\n   - Emit errors/warnings as Issue objects\n\n3. CLI Command (src/cli/)\n   - ingest.command.ts - Commander.js command\n   - File reading, JSON parsing\n   - Write ingest.json to run folder\n   - Exit codes: 0, 2, 5\n\n4. Tests (tests/unit/ingest/)\n   - Valid scaffold passes\n   - Invalid schemaVersion detection\n   - Missing required fields\n   - Unknown fields ignored\n   - Duplicate node IDs\n   - Coverage  80%\n\nExit: luma ingest works, all spec rules enforced\nTime: 3-4 days","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T13:16:28.6455193+01:00","updated_at":"2025-10-27T13:56:27.8978762+01:00","closed_at":"2025-10-27T13:56:27.8978762+01:00","dependencies":[{"issue_id":"LUMA-5","depends_on_id":"LUMA-2","type":"blocks","created_at":"2025-10-27T13:17:44.5666306+01:00","created_by":"daemon"}]}
{"id":"LUMA-50","title":"Validator: MUST rules PD-MUST-1..3","description":"MUST rules implementation. Files: src/core/patterns/progressive-disclosure.ts define Pattern with must rules; src/core/patterns/disclosure-utils.ts with helpers: findControl(node), hasPrimaryHidden(node), hasLabel(node). Steps: implement rule check(root) walking tree building collapsible nodes list. Acceptance: unit test progressive-disclosure-must.test.ts covers three fail cases + one pass scenario; issues have ids/severity/error and suggestions present; details include expected/found/inferredControlId when relevant.","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-29T17:03:45.3835784+01:00","updated_at":"2025-10-29T18:58:14.7607495+01:00","closed_at":"2025-10-29T18:58:14.7607495+01:00","dependencies":[{"issue_id":"LUMA-50","depends_on_id":"LUMA-48","type":"discovered-from","created_at":"2025-10-29T17:03:45.3870051+01:00","created_by":"daemon"}]}
{"id":"LUMA-51","title":"Validator: SHOULD rules PD-SHOULD-1..3","description":"SHOULD rules. Files: progressive-disclosure.ts add should rules using helpers in disclosure-utils.ts. Logic: control-far (distance \u003e1 sibling index from collapsible or inside header), inconsistent-affordance (2 collapsibles, intersection of token sets empty ignoring empties), early-section (collapsible index before first required Form field node or main content container). Acceptance: progressive-disclosure-should.test.ts asserts each warn condition individually and non-trigger cases.","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-29T17:03:47.9584042+01:00","updated_at":"2025-10-29T20:16:58.2174625+01:00","closed_at":"2025-10-29T20:16:58.2174625+01:00","dependencies":[{"issue_id":"LUMA-51","depends_on_id":"LUMA-48","type":"discovered-from","created_at":"2025-10-29T17:03:47.9619845+01:00","created_by":"daemon"}]}
{"id":"LUMA-52","title":"Inference engine for controls (3.2.3)","description":"Inference engine. Files: src/core/patterns/disclosure-inference.ts export findDisclosureControl(node,parentChildren). Deterministic order: preceding siblings scan reverse; following siblings forward; header row (first child) if container. Keyword match regex /\\b(show|hide|expand|collapse|advanced|details|more)\\b/i; fallback affordances tokens chevron|details. Acceptance: progressive-disclosure-inference.test.ts asserts selection precedence, invisibility skip, keyword case-insensitivity.","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-29T17:03:55.7527571+01:00","updated_at":"2025-10-29T19:08:16.3146351+01:00","closed_at":"2025-10-29T19:08:16.3146351+01:00","dependencies":[{"issue_id":"LUMA-52","depends_on_id":"LUMA-48","type":"discovered-from","created_at":"2025-10-29T17:03:55.7566264+01:00","created_by":"daemon"}]}
{"id":"LUMA-53","title":"Pattern scoring integration (45% weighting)","description":"Scoring integration. Files: none new; ensure existing scorePatternFidelity counts PD MUST/SHOULD. Add integration test progressive-disclosure-scoring.test.ts with one MUST fail (expect pattern fidelity drop 30) and one SHOULD fail (drop 10). Acceptance: overall score reflects combined weights; PD inactive yields identical score to baseline.","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-29T17:04:00.6883713+01:00","updated_at":"2025-10-29T21:51:11.3369004+01:00","closed_at":"2025-10-29T21:51:11.3369004+01:00","dependencies":[{"issue_id":"LUMA-53","depends_on_id":"LUMA-48","type":"discovered-from","created_at":"2025-10-29T17:04:00.6916527+01:00","created_by":"daemon"}]}
{"id":"LUMA-54","title":"Patterns CLI: list \u0026 show Progressive.Disclosure","description":"Patterns CLI exposure. Files: pattern-registry.ts register 'progressive-disclosure' and 'Progressive.Disclosure'. patterns.command.ts update help text and show logic to include PD rules. Acceptance: luma patterns --list lists both aliases; luma patterns --show Progressive.Disclosure --json outputs must[] should[] source fields; mismatch pattern name returns existing error.","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-29T17:04:04.1886921+01:00","updated_at":"2025-10-30T09:50:23.4148582+01:00","closed_at":"2025-10-30T09:50:23.4148582+01:00","dependencies":[{"issue_id":"LUMA-54","depends_on_id":"LUMA-48","type":"discovered-from","created_at":"2025-10-29T17:04:04.1919904+01:00","created_by":"daemon"}]}
{"id":"LUMA-55","title":"Flow command wiring for --patterns progressive-disclosure","description":"Flow command wiring. Files: cli/flow.command.ts expand pattern parsing: split comma list, trim, resolve aliases including 'progressive-disclosure'. Auto-add PD pattern if not specified but any collapsible hint present. Acceptance: tests in progressive-disclosure-activation.test.ts verifying explicit flag, implicit activation, and non-activation cases.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-29T17:04:06.9948566+01:00","updated_at":"2025-10-30T09:29:23.590531+01:00","closed_at":"2025-10-30T09:29:23.590531+01:00","dependencies":[{"issue_id":"LUMA-55","depends_on_id":"LUMA-48","type":"discovered-from","created_at":"2025-10-29T17:04:06.9978729+01:00","created_by":"daemon"}]}
{"id":"LUMA-56","title":"Tests: passing example (8.1)","description":"Passing example test. File: tests/unit/patterns/progressive-disclosure.test.ts case 'passing example'. JSON: sibling Button toggle-advanced, collapsible Box advanced defaultState collapsed, primary action outside. Expect: mustFailed=0 shouldFailed=0 no PD issues IDs. Use validatePattern(getPattern('Progressive.Disclosure'), root).","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-29T17:04:11.1962666+01:00","updated_at":"2025-10-29T20:31:46.5488679+01:00","closed_at":"2025-10-29T20:31:46.5488679+01:00","dependencies":[{"issue_id":"LUMA-56","depends_on_id":"LUMA-48","type":"discovered-from","created_at":"2025-10-29T17:04:11.2015667+01:00","created_by":"daemon"}]}
{"id":"LUMA-57","title":"Tests: MUST failures (8.2)","description":"MUST failures tests. File: tests/unit/patterns/progressive-disclosure.test.ts cases: (1) no control -\u003e disclosure-no-control; (2) primary hidden -\u003e disclosure-hides-primary; (3) missing label -\u003e disclosure-missing-label. Assert severity error and suggestions present. mustFailed increases per case.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-29T17:04:17.3333234+01:00","updated_at":"2025-10-30T09:41:30.892565+01:00","closed_at":"2025-10-30T09:41:30.892565+01:00","dependencies":[{"issue_id":"LUMA-57","depends_on_id":"LUMA-48","type":"discovered-from","created_at":"2025-10-29T17:04:17.3371671+01:00","created_by":"daemon"}]}
{"id":"LUMA-58","title":"Tests: SHOULD warnings (8.3)","description":"SHOULD warnings tests. File: tests/unit/patterns/progressive-disclosure.test.ts cases: control far (distance \u003e1 sibling), inconsistent affordances (two collapsibles chevron vs details), early section (collapsible before first Form field). Assert warn severity and shouldFailed counts. Include negative control cases (adjacent control, shared affordances).","status":"closed","priority":3,"issue_type":"task","created_at":"2025-10-29T17:04:22.857514+01:00","updated_at":"2025-10-30T09:55:11.4854903+01:00","closed_at":"2025-10-30T09:55:11.4854903+01:00","dependencies":[{"issue_id":"LUMA-58","depends_on_id":"LUMA-48","type":"discovered-from","created_at":"2025-10-29T17:04:22.8614037+01:00","created_by":"daemon"}]}
{"id":"LUMA-59","title":"Backward compatibility guard (8.4)","description":"Backward compatibility test. File: tests/compatibility/v1.0-scaffolds.test.ts add PD check: validatePatterns excluding PD when no hints \u0026 no flag, expect patternResults not containing Progressive.Disclosure. Add performance note: measure validation time before/after (\u003c5% increase).","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-29T17:04:26.9929355+01:00","updated_at":"2025-10-29T20:22:10.2007525+01:00","closed_at":"2025-10-29T20:22:10.2007525+01:00","dependencies":[{"issue_id":"LUMA-59","depends_on_id":"LUMA-48","type":"discovered-from","created_at":"2025-10-29T17:04:26.9980394+01:00","created_by":"daemon"}]}
{"id":"LUMA-6","title":"Phase 3: Responsive Override System","description":"Implement responsive override application logic per spec Section 3.4.\n\nDeliverables:\n1. Override Engine (src/core/layout/)\n   - responsive.ts - Parse at keys, apply overrides\n   - Implement normative algorithm: collect \u003e=X where XW in ascending order, \u003c=Y where YW in descending order\n   - Shallow merge objects, replace arrays\n   - Handle nested overrides correctly\n\n2. Tests (tests/unit/layout/)\n   - Override at \u003e=320 applied correctly\n   - Override at \u003c=768 applied correctly\n   - Multiple overrides in correct order\n   - Nested object merging\n   - Array replacement\n   - Coverage  90%\n\nExit: Override algorithm deterministic, matches spec exactly\nTime: 2-3 days","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T13:17:48.3402983+01:00","updated_at":"2025-10-27T14:09:04.2810393+01:00","closed_at":"2025-10-27T14:09:04.2810393+01:00","dependencies":[{"issue_id":"LUMA-6","depends_on_id":"LUMA-5","type":"blocks","created_at":"2025-10-27T13:18:03.7535832+01:00","created_by":"daemon"}]}
{"id":"LUMA-60","title":"Documentation: add pattern to README \u0026 SPECIFICATION","description":"Documentation updates. Files: README.md add bullet 'Progressive Disclosure (optional)'; SPECIFICATION.md new subsection referencing patterns spec; LUMA-PATTERN-Progressive-Disclosure-SPEC.md already exists -\u003e cross-link. Provide JSON examples (valid/invalid) matching tests. Acceptance: luma ingest unaffected, docs build passes lint. Release note references sources.","status":"closed","priority":3,"issue_type":"task","created_at":"2025-10-29T17:04:30.7111035+01:00","updated_at":"2025-10-30T10:13:43.0874781+01:00","closed_at":"2025-10-30T10:13:43.0874781+01:00","dependencies":[{"issue_id":"LUMA-60","depends_on_id":"LUMA-48","type":"discovered-from","created_at":"2025-10-29T17:04:30.7141677+01:00","created_by":"daemon"}]}
{"id":"LUMA-61","title":"Release notes \u0026 CHANGELOG entry","description":"CHANGELOG entry. Files: CHANGELOG.md add version TBD (0.1.x) section: Added Progressive Disclosure pattern (optional). Notes: inactive unless flag or hint; scoring deductions -30 MUST -10 SHOULD. Provide upgrade note: no schema breaking changes; hints ignored if omitted. Acceptance: changelog diff includes entry; release notes bead closed.","status":"closed","priority":3,"issue_type":"task","created_at":"2025-10-29T17:04:34.197195+01:00","updated_at":"2025-10-30T12:28:18.9673904+01:00","closed_at":"2025-10-30T12:28:18.9673904+01:00","dependencies":[{"issue_id":"LUMA-61","depends_on_id":"LUMA-48","type":"discovered-from","created_at":"2025-10-29T17:04:34.2125486+01:00","created_by":"daemon"}]}
{"id":"LUMA-62","title":"Refactor: stabilize issue suggestion generator","description":"Suggestion generator. Files: src/core/patterns/suggestions.ts add map for PD issue ids -\u003e deterministic text; integrate in progressive-disclosure.ts rule outputs by calling getSuggestion(id). Tests: progressive-disclosure-suggestions.test.ts assert each PD issue includes suggestion identical to spec examples. Acceptance: All PD issues carry suggestion field.","status":"closed","priority":3,"issue_type":"task","created_at":"2025-10-29T17:04:36.5339565+01:00","updated_at":"2025-10-30T11:22:53.262067+01:00","closed_at":"2025-10-30T11:22:53.262067+01:00","dependencies":[{"issue_id":"LUMA-62","depends_on_id":"LUMA-48","type":"discovered-from","created_at":"2025-10-29T17:04:36.5426631+01:00","created_by":"daemon"}]}
{"id":"LUMA-63","title":"Add affordances field handling in node type","description":"Affordances array. Files: src/types/node.ts add affordances?:string[] to BaseNode. Ingest: treat non-string entries as schema error. Used only by PD inconsistent-affordance rule. Acceptance: existing tests unchanged; new test affordances-schema-valid.test.ts ensures valid array accepted; invalid array triggers ingest issue.","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-29T17:04:39.3976572+01:00","updated_at":"2025-10-29T19:20:51.8183794+01:00","closed_at":"2025-10-29T19:20:51.8183794+01:00","dependencies":[{"issue_id":"LUMA-63","depends_on_id":"LUMA-48","type":"discovered-from","created_at":"2025-10-29T17:04:39.4016749+01:00","created_by":"daemon"}]}
{"id":"LUMA-64","title":"Add behaviors.disclosure schema hint (non-breaking)","description":"Schema hint behaviors.disclosure. Files: src/types/node.ts interface DisclosureBehavior { collapsible:boolean; defaultState?:'collapsed'|'expanded'; controlsId?:string; ariaSummaryText?:string }; extend BaseNode with optional behaviors?:{ disclosure?:DisclosureBehavior }. Validation: if defaultState present must be one of allowed; else treat as 'collapsed'. Ingest: no failure for omission. Acceptance: scaffold with valid hint ingests; invalid defaultState yields existing Zod enum error; controlsId not required. Add unit test node-disclosure-schema.test.ts.","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-29T17:04:43.6317671+01:00","updated_at":"2025-10-29T18:29:16.4093353+01:00","closed_at":"2025-10-29T18:29:16.4093353+01:00","dependencies":[{"issue_id":"LUMA-64","depends_on_id":"LUMA-48","type":"discovered-from","created_at":"2025-10-29T17:04:43.6356923+01:00","created_by":"daemon"}]}
{"id":"LUMA-65","title":"Add behaviors property to Base Node Properties in init.command.ts","description":"FILE: src/cli/init.command.ts. LOCATION: Base Node Properties section around line 600-700. ADD after existing properties: behaviors object with disclosure sub-properties (collapsible boolean, defaultState string, controlsId string), and affordances string array. ACCEPTANCE: behaviors documented, all sub-properties listed, TypeScript escaping correct. TEST: npm run build, luma init, verify behaviors in generated AGENTS.md","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-31T08:28:05.8841561+01:00","updated_at":"2025-10-31T08:34:10.1680488+01:00","closed_at":"2025-10-31T08:34:10.1680488+01:00"}
{"id":"LUMA-66","title":"Add Progressive Disclosure Pattern Guide to init.command.ts","description":"FILE: src/cli/init.command.ts. LOCATION: Add new section after Component Schema Quick Reference around line 650. CONTENT: Progressive Disclosure Pattern section with Approach A (schema hints with behaviors.disclosure - recommended, auto-activates) and Approach B (manual --patterns flag). Include JSON example with behaviors.disclosure, when pattern applies, MUST and SHOULD rules. ACCEPTANCE: Both approaches documented, clear schema hints recommendation, pattern rules listed, valid JSON examples. TEST: npm run build, luma init, verify section present with proper JSON escaping","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-31T08:28:37.0900185+01:00","updated_at":"2025-10-31T13:51:18.2483135+01:00","closed_at":"2025-10-31T13:51:18.2483135+01:00"}
{"id":"LUMA-67","title":"Add Pattern Detection Checklist to init.command.ts","description":"FILE: src/cli/init.command.ts. LOCATION: Before Validate with LUMA section around line 750. CONTENT: Pattern Detection Checklist with decision tree (Form to Form.Basic, Table to Table.Simple, show/hide to behaviors.disclosure), checklist items, and common indicators table (Add/New/Create/Edit/Show buttons indicate Progressive.Disclosure). ACCEPTANCE: Decision tree present, checklist with checkboxes, indicators table, warning about incomplete validation. TEST: npm run build, luma init, verify checklist section and formatting","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-31T08:28:54.1783545+01:00","updated_at":"2025-10-31T14:47:30.8036669+01:00","closed_at":"2025-10-31T14:47:30.8036669+01:00"}
{"id":"LUMA-68","title":"Update validation commands section in init.command.ts","description":"FILE: src/cli/init.command.ts. LOCATION: Find and replace Validate with LUMA section around line 800. CHANGES: Add STEP 1 Identify Patterns (MANDATORY) with examples, STEP 2 Run Full Pipeline (existing commands), note about behaviors.disclosure auto-activation, STEP 3 Score the run. ACCEPTANCE: Three clear steps, pattern identification is step 1, auto-activation note present, existing commands preserved. TEST: npm run build, luma init, verify 3-step structure with mandatory pattern identification","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-31T08:29:08.942392+01:00","updated_at":"2025-10-31T15:00:21.0090261+01:00","closed_at":"2025-10-31T15:00:21.0090261+01:00"}
{"id":"LUMA-69","title":"Add Partial Pattern Testing pitfall to init.command.ts","description":"FILE: src/cli/init.command.ts. LOCATION: Common Pitfalls section around line 850. CONTENT: New pitfall Partial Pattern Testing with wrong examples (only tested obvious patterns, forgot show/hide, not using behaviors.disclosure) and right examples (used checklist, used behaviors.disclosure). Include real example with Form+Table+show/hide button where Progressive.Disclosure was missed, solution is adding behaviors.disclosure hint. ACCEPTANCE: New pitfall added, wrong vs right clear, real example with solution, behaviors.disclosure as solution. TEST: npm run build, luma init, verify pitfall present, formatting matches others","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-31T08:29:23.2147748+01:00","updated_at":"2025-10-31T15:37:11.1520748+01:00","closed_at":"2025-10-31T15:37:11.1520748+01:00"}
{"id":"LUMA-7","title":"Phase 4: Headless Layout Engine","description":"Implement layout simulation and frame computation per spec Section 5.\n\nDeliverables:\n1. Layout Primitives (src/core/layout/)\n   - measure.ts - Text, Button, Field, Table measurement\n   - Text: fontSize*0.55*charCount, line wrapping at 1.4 line height\n   - Button/Field: respect minTouchTarget (default 44x44)\n   - Table: header 48 + rowHeight*rows\n\n2. Container Layout\n   - stack.ts - Vertical/horizontal with gap/padding/align/wrap\n   - grid.ts - Grid with column reduction (minColWidth logic)\n   - box.ts - Simple box with padding\n   - Alignment: start, center, end, stretch\n\n3. Layout Orchestrator\n   - layout.ts - Main engine, pre-order traversal\n   - Frame computation {x,y,w,h} per node\n   - Issue detection: overflow-x, spacing-off-scale, touch-target-too-small, primary-below-fold\n\n4. CLI Command\n   - layout.command.ts - Parse --viewports, run per viewport\n   - Write layout_WxH.json per viewport\n   - Exit 3 if blocking issues\n\n5. Tests (tests/unit/layout/)\n   - Stack layouts, Grid column reduction\n   - Overflow detection, Primary below fold\n   - Spacing validation\n   - Coverage  85%\n\nExit: luma layout works, frames correct per spec\nTime: 4-5 days","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T13:18:08.0066034+01:00","updated_at":"2025-10-27T16:42:35.0048727+01:00","closed_at":"2025-10-27T16:42:35.0048727+01:00","dependencies":[{"issue_id":"LUMA-7","depends_on_id":"LUMA-6","type":"blocks","created_at":"2025-10-27T13:18:41.6965354+01:00","created_by":"daemon"}]}
{"id":"LUMA-70","title":"Integration test for updated init command output","description":"GOAL: Verify all 5 changes work together and generate valid AGENTS.md. TEST CASES: 1) luma init generates AGENTS.md, 2) contains behaviors documentation, 3) contains Progressive Disclosure guide, 4) contains Pattern Detection Checklist, 5) contains updated validation section, 6) contains Partial Pattern Testing pitfall, 7) all JSON examples valid, 8) markdown properly formatted. ACCEPTANCE: All 6 sections present, no TypeScript template errors, no markdown syntax errors, JSON parseable. TEST: npm run build, create test-init-dir, luma init, verify all sections, validate JSON examples with jq or JSON.parse","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-31T08:29:37.3482456+01:00","updated_at":"2025-10-31T16:34:09.754538+01:00","closed_at":"2025-10-31T16:34:09.754538+01:00","dependencies":[{"issue_id":"LUMA-70","depends_on_id":"LUMA-65","type":"blocks","created_at":"2025-10-31T08:29:57.0243409+01:00","created_by":"daemon"},{"issue_id":"LUMA-70","depends_on_id":"LUMA-66","type":"blocks","created_at":"2025-10-31T08:30:03.1021481+01:00","created_by":"daemon"},{"issue_id":"LUMA-70","depends_on_id":"LUMA-67","type":"blocks","created_at":"2025-10-31T08:30:10.6530063+01:00","created_by":"daemon"},{"issue_id":"LUMA-70","depends_on_id":"LUMA-68","type":"blocks","created_at":"2025-10-31T08:30:10.9713041+01:00","created_by":"daemon"},{"issue_id":"LUMA-70","depends_on_id":"LUMA-69","type":"blocks","created_at":"2025-10-31T08:30:11.2412769+01:00","created_by":"daemon"}]}
{"id":"LUMA-71","title":"Guided Flow: Validator scaffolding","description":"","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-10-31T17:44:35.1774106+01:00","updated_at":"2025-10-31T18:30:35.7343246+01:00","closed_at":"2025-10-31T18:30:35.7343246+01:00"}
{"id":"LUMA-72","title":"Guided Flow: Step \u0026 scope extraction helpers","description":"","status":"in_progress","priority":1,"issue_type":"feature","created_at":"2025-10-31T17:44:47.8316591+01:00","updated_at":"2025-10-31T19:02:23.5649661+01:00"}
{"id":"LUMA-73","title":"Add Progressive Disclosure pattern docs to AGENTS.md","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-31T19:23:01.7934535+01:00","updated_at":"2025-10-31T19:24:30.6202986+01:00","closed_at":"2025-10-31T19:24:30.6202986+01:00"}
{"id":"LUMA-74","title":"Pattern suggestion command: implement heuristic-based suggestions","description":"CLI: patterns.command.ts add --suggest flag. Heuristics: scan root \u0026 descendants for Form (fields/actions) -\u003e suggest Form.Basic; Table (columns/responsive.strategy) -\u003e Table.Simple; any node.behaviors.disclosure.collapsible -\u003e Progressive.Disclosure; multi-step indicators (buttons text Next/Previous/Step) -\u003e Guided.Flow. Output JSON: { suggestions:[{pattern, reason, confidence}] }. Confidence scale: high (direct structural match), medium (keyword/button hints), low (inferred by affordances). Acceptance: Running luma patterns --suggest on golden template returns relevant suggestions with reasons. Tests: tests/unit/patterns/pattern-suggestion.test.ts verifying each heuristic, no false positive for unrelated nodes. Add README section 'Pattern Suggestions' with example output. Performance: \u003c5% additional time vs patterns --list. ","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-11-01T08:48:47.4825722+01:00","updated_at":"2025-11-01T08:57:29.819389+01:00","closed_at":"2025-11-01T08:57:29.819389+01:00"}
{"id":"LUMA-75","title":"Auto pattern selection: infer and inject patterns from suggestions","description":"Extend flow.command.ts: if --patterns flag omitted, call suggestion engine and auto-inject any high-confidence suggestions (Form.Basic, Table.Simple, Progressive.Disclosure, Guided.Flow). Provide --no-auto flag to disable. Add pattern-registry metadata confidence thresholds. Acceptance: Running luma flow contact.json (no --patterns) triggers Form.Basic automatically; passing a scaffold with collapsible hints auto-activates Progressive.Disclosure; tests: tests/integration/auto-pattern-selection.test.ts covers activation and --no-auto suppression. Update README Quickstart step: Pattern Identification now can be implicit if omitted. Performance: Additional overhead \u003c10ms for typical scaffolds.","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-11-01T08:48:58.5862728+01:00","updated_at":"2025-11-01T09:21:32.4958618+01:00","closed_at":"2025-11-01T09:21:32.4958618+01:00","dependencies":[{"issue_id":"LUMA-75","depends_on_id":"LUMA-74","type":"blocks","created_at":"2025-11-01T08:48:58.5929001+01:00","created_by":"daemon"}]}
{"id":"LUMA-76","title":"Pattern coverage reporting: show activated vs total patterns and suggestion gaps","description":"Add --coverage flag to flow.command.ts or new command luma patterns --coverage. Compute: totalPatterns (registry size), activatedPatterns (validated), suggestedButInactive (from suggestion engine medium/high confidence not in activated). Output JSON: { coverage:{ activated,nTotal,percent, gaps:[pattern, reason]} }. Acceptance: Scaffold with Form+Table+Disclosure hints shows activated=3, gaps includes Guided.Flow if steps absent. Tests: tests/unit/patterns/pattern-coverage.test.ts covers single pattern, multi-pattern, gap scenario. Docs: README section 'Pattern Coverage' with example. Performance: coverage computation reuses suggestion pass; \u003c3% overhead. ","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-11-01T08:49:08.4840796+01:00","updated_at":"2025-11-01T09:31:37.6917178+01:00","closed_at":"2025-11-01T09:31:37.6917178+01:00","dependencies":[{"issue_id":"LUMA-76","depends_on_id":"LUMA-74","type":"blocks","created_at":"2025-11-01T08:49:08.4904989+01:00","created_by":"daemon"}]}
{"id":"LUMA-77","title":"Guided.Flow documentation expansion: add triggers, examples, and GF-SHOULD-4 rationale","description":"Files: LUMA-PATTERN-Guided-Flow-SPEC.md, README.md pattern section, AGENTS.md (Pattern Detection Checklist extension). Add: Activation triggers (multi-step buttons, progress indicators, actions row at bottom), MUST vs SHOULD table including pending GF-SHOULD-4, Examples: passing wizard, failing primary-below-fold scenario, JSON snippets with state transitions. Rationale for GF-SHOULD-4: Maintain visibility of primary action above fold for conversion. Acceptance: After update luma patterns --show Guided.Flow includes new rule placeholder if not yet implemented; AGENTS.md shows updated checklist bullet 'Primary action visibility'. Tests: update or add doc-generation test if infrastructure exists (else manual verification).","status":"closed","priority":2,"issue_type":"task","created_at":"2025-11-01T08:49:18.1822937+01:00","updated_at":"2025-11-01T09:37:10.8791036+01:00","closed_at":"2025-11-01T09:37:10.8791036+01:00"}
{"id":"LUMA-78","title":"Pattern alias expansion: add short and kebab-case aliases for all patterns","description":"Files: src/core/patterns/pattern-registry.ts. Add aliases: Form.Basic -\u003e form, form-basic; Table.Simple -\u003e table, table-simple; Progressive.Disclosure -\u003e pd, progressive-disclosure; Guided.Flow -\u003e guided-flow, wizard, flow-wizard. Update patterns.command.ts list output to show primary name + aliases. Acceptance: luma patterns --list displays each pattern with alias array; flow.command.ts can resolve any alias. Tests: tests/unit/patterns/pattern-alias-resolution.test.ts covers alias resolution and conflict avoidance. Performance: no measurable change.","status":"closed","priority":3,"issue_type":"chore","created_at":"2025-11-01T08:49:27.7056218+01:00","updated_at":"2025-11-01T10:31:50.1968234+01:00","closed_at":"2025-11-01T10:31:50.1968234+01:00"}
{"id":"LUMA-79","title":"Guided.Flow rule GF-SHOULD-4: primary action below fold detection","description":"Files: src/core/patterns/guided-flow.ts implement SHOULD rule id wizard-primary-below-fold (GF-SHOULD-4). Logic: For each Guided.Flow scope (wizard root), find primary action Button (roleHint primary) final step or global actions row; use layout frames for default viewport (first layout artifact). If primary.y + primary.h \u003e foldY (viewport height) -\u003e issue warn severity; details: {frame:{x,y,w,h},viewportHeight,foldY}. Suggestion: 'Elevate primary action above fold or add top-level action stub'. Acceptance: tests/unit/patterns/guided-flow-should4.test.ts with: (1) primary below fold triggers warn (2) primary above fold no issue (3) multiple steps all primary visible no issue. Performance: reuse existing layout frames map; negligible overhead (\u003c2ms).","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-11-01T08:49:37.6772727+01:00","updated_at":"2025-11-01T09:06:31.4534109+01:00","closed_at":"2025-11-01T09:06:31.4534109+01:00"}
{"id":"LUMA-8","title":"Phase 5: Keyboard Flow Analysis","description":"Implement keyboard tab sequence and flow validation per spec Section 6.\n\nDeliverables:\n1. Keyboard Flow Engine (src/core/keyboard/)\n   - traversal.ts - Pre-order tree traversal\n   - focusable.ts - Identify Button, Field, focusable:true nodes\n   - sequence.ts - Build tab sequence\n   - flow-rules.ts - Detect cancel-before-primary, field-after-actions\n\n2. Form-Specific Logic\n   - Validate fields before actions\n   - Action group analysis\n   - Unreachable node detection (critical)\n\n3. CLI Command\n   - keyboard.command.ts - Generate keyboard.json\n   - Optional --state parameter\n   - Exit 3 if critical flow errors\n\n4. Tests (tests/unit/keyboard/)\n   - Pre-order traversal\n   - Focusable identification\n   - Form field ordering\n   - Unreachable detection\n   - Coverage  85%\n\nExit: luma keyboard works, tab sequence correct\nTime: 3-4 days","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T13:18:41.8619973+01:00","updated_at":"2025-10-27T17:25:53.9188163+01:00","closed_at":"2025-10-27T17:25:53.9188163+01:00","dependencies":[{"issue_id":"LUMA-8","depends_on_id":"LUMA-7","type":"blocks","created_at":"2025-10-27T13:18:55.5951729+01:00","created_by":"daemon"}]}
{"id":"LUMA-80","title":"Audit: Remove manual issues.jsonl edits risk","description":"","status":"closed","priority":0,"issue_type":"chore","created_at":"2025-11-01T11:24:00.0046686+01:00","updated_at":"2025-11-01T12:47:28.4614429+01:00","closed_at":"2025-11-01T12:47:28.4614429+01:00"}
{"id":"LUMA-81","title":"Audit: Remove manual issues.jsonl edits risk","description":"","status":"closed","priority":0,"issue_type":"chore","created_at":"2025-11-01T11:24:09.6186475+01:00","updated_at":"2025-11-01T12:15:12.3150539+01:00","closed_at":"2025-11-01T12:15:12.3150539+01:00"}
{"id":"LUMA-82","title":"Audit: Guard against manual .beads/issues.jsonl edits","description":"AUDIT / GOVERNANCE\n\nPROBLEM:\nManual edits to .beads/issues.jsonl were attempted earlier, risking divergence from the authoritative bead database and confusing downstream agents.\n\nRISKS:\n- Hidden / orphan issues not visible to bd CLI\n- Lost dependency edges (blocked/discovered-from) causing wrong ordering\n- Daemon overwrite race creating silent data loss\n\nGOAL:\nEstablish guardrails so only bd CLI (or MCP server) mutates issue state.\n\nSCOPE:\n1. Add policy line in AGENTS.md (or CONTRIBUTING) referencing this bead.\n2. Provide integrity script scripts/validate-beads-integrity.ps1 (and optional .sh) that:\n   - Exports current beads via bd (if command exists) OR compares mod time\n   - Detects manual edits (heuristic: lines containing id pattern not produced by bd timestamp order) =\u003e non-zero exit\n3. README tooling note referencing policy \u0026 script.\n\nOUT OF SCOPE:\n- Cryptographic signing\n- Replacing bd\n\nACCEPTANCE CRITERIA:\n1. Policy line present: Never edit .beads/issues.jsonl directly; use bd CLI.\n2. Integrity script: returns exit 0 when clean; returns exit 2 with explanation JSON when simulated manual change inserted.\n3. Documentation shows sample run output for clean vs dirty states.\n4. After completion, manual edit simulation + script correctly flags, revert clears.\n5. No residual manually injected lines remain.\n\nVERIFICATION STEPS:\nA. Append a fake JSONL line manually; run script -\u003e non-zero \u0026 includes code MANUAL_EDIT_DETECTED.\nB. Remove line; run script -\u003e 0.\n\nSUCCESS METRIC:\nZero further manual edit incidents (audited in commit messages) over next 30 days.\n","status":"closed","priority":0,"issue_type":"chore","created_at":"2025-11-01T11:25:59.9776706+01:00","updated_at":"2025-11-01T11:38:41.4395049+01:00","closed_at":"2025-11-01T11:38:41.4395049+01:00"}
{"id":"LUMA-83","title":"Epic: Agent Command Runtime Knowledge System","description":"EPIC: Agent Command Runtime Knowledge System\n\nGOAL: Provide deterministic, queryable runtime knowledge via `luma agent` replacing bulky static AGENTS.md content for AI agents.\n\nPROBLEMS SOLVED:\n- Static doc drift\n- High token cost for agents\n- Lack of selective retrieval (--get paths)\n\nCHILD ISSUES:\nLUMA-84 skeleton, LUMA-85 early sections, LUMA-86 patterns/components/examples, LUMA-87 links/meta+envelope, LUMA-88 dot-path, LUMA-89 tests, LUMA-90 init refactor, LUMA-91 docs, LUMA-92 hardening, LUMA-82 audit (governance guardrail).\n\nSUCCESS METRICS:\n- Full command (all sections) \u003c 60ms on medium scaffold\n- Deterministic output (identical JSON across two consecutive runs)\n- Dot-path retrieval returns only requested subtree (\u003c 5ms incremental)\n\nNON-GOALS:\n- Persisting knowledge to remote service\n- Generating natural language tutorials\n\nACCEPTANCE CRITERIA:\n1. All child issues closed.\n2. `luma agent --sections quick,rules --json` returns envelope with only those sections.\n3. `--get patterns.Form.Basic.must[0]` style deep indexing explicitly NOT supported (documented) in first version; simple dot paths are.\n4. `init.command.ts` no longer embeds large agent knowledge block.\n5. README documents new command; legacy references cleaned.\n6. Tests (LUMA-89) passing and cover: full generation, filtering, dot-path error.\n7. Hardening (LUMA-92) ensures stable ordering.\n","status":"closed","priority":1,"issue_type":"epic","created_at":"2025-11-01T11:26:01.8736477+01:00","updated_at":"2025-11-01T17:43:01.1709218+01:00","closed_at":"2025-11-01T17:43:01.1709218+01:00"}
{"id":"LUMA-84","title":"Agent Command: Core CLI skeleton","description":"CORE CLI SKELETON\n\nSCOPE:\n- Add new command `agent` to Commander registration in `src/index.ts`.\n- Flags: --sections \u003ccsv\u003e, --all (shortcut for all sections), --get \u003cdotPath\u003e, --list-sections, --json.\n- Produce base envelope: { version: \u003cpkg.version\u003e, generatedAt: ISO8601, sections: {} }.\n- Parse and normalize sections CSV (dedupe, preserve given order where valid).\n\nCONTRACT:\nInput: CLI flags. No scaffold dependency.\nOutput: Writes JSON to stdout when --json or pretty prints list of sections.\nExit codes: 0 success, 2 invalid args (unknown section or conflicting flags), 1 unexpected exception.\n\nDONE WHEN:\n1. Running `luma agent --list-sections` prints placeholder section names.\n2. `--sections quick` returns envelope with sections.quick = {} (empty placeholder) not omitted.\n3. Invalid section yields exit 2 with machine-readable error JSON (code/message) when --json.\n4. Tests (stub) compile but may be pending.\n\nOUT OF SCOPE: Real section assembly (later beads).\n","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-11-01T11:26:03.5127603+01:00","updated_at":"2025-11-01T11:46:22.4071716+01:00","closed_at":"2025-11-01T11:46:22.4071716+01:00"}
{"id":"LUMA-85","title":"Agent Command: Section assemblers (quick,workflow,rules)","description":"SECTION ASSEMBLERS: quick, workflow, rules\n\nINPUT SOURCES:\n- Package version (for quick summary usage line)\n- Existing CLI command metadata (workflow pipeline ordering: ingest -\u003e layout -\u003e keyboard -\u003e flow -\u003e score -\u003e report)\n- Pattern registry for rule counts (must/should totals)\n\nOUTPUT SHAPES:\nquick: { usage: string, primaryCommands: string[], recommendedOrder: string[] }\nworkflow: { stages: [{ name, description, command, produces }], notes: string[] }\nrules: { patterns: [{ name, must: [ids...], should: [ids...] }] }\n\nALGORITHM NOTES:\n- Deterministic ordering: patterns alphabetically by primary name.\n- MUST/SHOULD IDs pulled verbatim from pattern definitions.\n\nACCEPTANCE:\n1. `--sections rules --json` returns rules.patterns array with each pattern present.\n2. `--sections quick,workflow` returns both sections only.\n3. No extraneous fields (lean output).\n4. Unit tests validate ordering \u0026 presence.\n\nOUT OF SCOPE: Pattern description text or sources (handled later).\n","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-11-01T11:26:19.1979928+01:00","updated_at":"2025-11-01T12:03:08.3411735+01:00","closed_at":"2025-11-01T12:03:08.3411735+01:00","dependencies":[{"issue_id":"LUMA-85","depends_on_id":"LUMA-84","type":"blocks","created_at":"2025-11-01T11:26:19.2014581+01:00","created_by":"daemon"}]}
{"id":"LUMA-86","title":"Agent Command: Patterns/components/examples sections","description":"SECTIONS: patterns, components, examples\n\npatterns section:\n- For each registered pattern: { name, mustIds:[...], shouldIds:[...], counts:{ must:int, should:int } }\n- Compressed (no verbose rule text) to minimize tokens.\n\ncomponents section:\n- Extract component schema names from ingest validator (data/component-schemas.json or runtime types) listing: { name, requiredProps: string[], optionalProps: string[] }.\n- Exclude internal-only props.\n\nexamples section:\n- Curate 2-3 canonical JSON examples (happy form, pattern failures, progressive disclosure) by reading files under /examples.\n- Provide: { id: string (filename without ext), description, file: string (relative path), patternsIllustrated: string[] }\n\nACCEPTANCE:\n1. `--sections patterns` returns counts consistent with rules section.\n2. Component entry for each schema seen in existing docs.\n3. Example list excludes large/raw bodies (no embedding entire JSON)  only metadata.\n4. Unit tests validate pattern count coherence and example presence.\n\nOUT OF SCOPE: Full schema property type details (future bead).\n","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-11-01T11:26:21.2595418+01:00","updated_at":"2025-11-01T12:11:30.6640113+01:00","closed_at":"2025-11-01T12:11:30.6640113+01:00","dependencies":[{"issue_id":"LUMA-86","depends_on_id":"LUMA-84","type":"blocks","created_at":"2025-11-01T11:26:21.2627529+01:00","created_by":"daemon"}]}
{"id":"LUMA-87","title":"Agent Command: Links/meta section + output envelope","description":"SECTIONS: links, meta, envelope finalization\n\nlinks section:\n- Provide authoritative spec \u0026 pattern spec URLs (list of { name, url }).\n\nmeta section:\n- { build?:string, nodeVersion?:string, platform?:string } if accessible without heavy cost.\n\nEnvelope shape (final):\n{ version:string, generatedAt:string (ISO8601 UTC), sections: { ...selectedSections } }\n\nRULES:\n- generatedAt always UTC (use toISOString()).\n- When no sections requested (edge case) still return sections:{}.\n- --all equivalent to selecting every known section in deterministic canonical order.\n\nACCEPTANCE:\n1. `--sections links,meta --json` shows only those keys.\n2. `--all` returns every implemented section (present at close of epic).\n3. generatedAt matches /Z$/ (UTC).\n4. Unknown section list yields exit 2 earlier (not here).\n\nOUT OF SCOPE: Git commit injection if repo state access is non-trivial (future enhancement).\n","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-11-01T11:26:24.564319+01:00","updated_at":"2025-11-01T12:37:12.2589705+01:00","closed_at":"2025-11-01T12:37:12.2589705+01:00","dependencies":[{"issue_id":"LUMA-87","depends_on_id":"LUMA-84","type":"blocks","created_at":"2025-11-01T11:26:24.5679167+01:00","created_by":"daemon"}]}
{"id":"LUMA-88","title":"Agent Command: Dot-path selection \u0026 filtering","description":"DOT-PATH \u0026 FILTERING\n\nFEATURES:\n- --get \u003cpath\u003e: path grammar = section(.segment)* where segment = [A-Za-z0-9_]+ (no array indexes / wildcards in v1).\n- --sections \u003ccsv\u003e: pre-filter sections before path extraction.\n- Order of operations: resolve section subset -\u003e build those sections -\u003e if --get provided, extract subtree -\u003e output envelope containing only that subtree at top-level? (Design choice: return subtree standalone when --get used) DECISION: Return subtree standalone (not wrapped) when --get present for low token cost.\n\nERROR MODES:\n- Unknown section in --sections =\u003e exit 2, JSON error { code:UNKNOWN_SECTION, section }.\n- Unknown path (section missing or segment not found) =\u003e exit 2, JSON error { code:UNKNOWN_PATH, path }.\n- Combination of --all with --sections =\u003e exit 2, JSON error { code:CONFLICTING_FLAGS }.\n\nPERF: Additional overhead for path extraction \u003c 1ms.\n\nACCEPTANCE:\n1. `--get quick` returns quick section object directly (no envelope).\n2. `--sections quick,rules --get rules` returns rules object only.\n3. Invalid path yields exit 2 with correct error code.\n4. Without --json flag, human readable error printed; with --json machine form.\n\nOUT OF SCOPE: Array indexing, globbing.\n","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-11-01T11:26:27.0330895+01:00","updated_at":"2025-11-01T12:54:34.0088164+01:00","closed_at":"2025-11-01T12:54:34.0088164+01:00","dependencies":[{"issue_id":"LUMA-88","depends_on_id":"LUMA-84","type":"blocks","created_at":"2025-11-01T11:26:27.0364507+01:00","created_by":"daemon"}]}
{"id":"LUMA-89","title":"Agent Command: Test suite (unit+integration)","description":"TEST SUITE\n\nLAYERS:\n- Unit: section assemblers (quick/workflow/rules, patterns, components, examples) with deterministic snapshots.\n- Unit: path resolver (valid/invalid, conflicting flags scenarios simulated via pure function if factored).\n- Integration: full command runs (all sections, subset, --get behavior, error cases).\n\nPERFORMANCE GUARD:\n- Measure wall-clock for full generation; warn (test failure) if \u003e100ms on baseline machine (can store threshold in test).\n\nCOVERAGE TARGETS:\n- Lines: \u003e=85% for new src/cli/agent.command.ts and any new helper modules.\n- Branches: Path error branches hit.\n\nACCEPTANCE:\n1. Snapshot test passes twice with no diff.\n2. Error cases assert exit code 2 and structured JSON error.\n3. Dot-path success case returns raw subtree (schema validated in test).\n4. Performance test under threshold.\n\nOUT OF SCOPE: Golden file diff tooling beyond Vitest snapshots.\n","status":"closed","priority":1,"issue_type":"task","created_at":"2025-11-01T11:26:28.8434325+01:00","updated_at":"2025-11-01T12:56:44.677249+01:00","closed_at":"2025-11-01T12:56:44.677249+01:00","dependencies":[{"issue_id":"LUMA-89","depends_on_id":"LUMA-84","type":"blocks","created_at":"2025-11-01T11:26:28.8496638+01:00","created_by":"daemon"}]}
{"id":"LUMA-9","title":"Phase 6: UX Pattern Library","description":"Implement pattern validation with MUST/SHOULD rules per spec Section 7.\n\nDeliverables:\n1. Pattern Definitions (src/core/patterns/)\n   - pattern-registry.ts - Registry of all patterns\n   - form-basic.ts - Form.Basic (GOV.UK): field-has-label, actions-exist, actions-after-fields, has-error-state\n   - table-simple.ts - Table.Simple (IBM Carbon): title-exists, responsive-strategy, min-width-fit-or-scroll\n   - Each exports: name, source{name,url}, must[], should[]\n\n2. Pattern Validation\n   - validator.ts - Run pattern rules against scaffold\n   - Rule execution engine\n   - Issue generation with source attribution\n   - MUST failure detection (blocking)\n\n3. CLI Command\n   - flow.command.ts - Accept --patterns flag (e.g., form,table)\n   - Write flow.json with per-pattern results\n   - Exit 3 if any MUST fails\n\n4. Tests (tests/unit/patterns/)\n   - Form.Basic MUST/SHOULD rules\n   - Table.Simple rules\n   - Source attribution\n   - Coverage  85%\n\nExit: luma flow works, patterns validated with sources\nTime: 3-4 days","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-27T13:18:55.7612476+01:00","updated_at":"2025-10-27T20:13:45.6942403+01:00","closed_at":"2025-10-27T20:13:45.6942403+01:00","dependencies":[{"issue_id":"LUMA-9","depends_on_id":"LUMA-8","type":"blocks","created_at":"2025-10-27T13:19:39.2815901+01:00","created_by":"daemon"}]}
{"id":"LUMA-90","title":"Agent Command: Replace verbose init AGENTS.md with pointer","description":"INIT REFACTOR\n\nOBJECTIVE:\nEliminate large static AGENTS.md template in `init.command.ts` and replace with concise pointer referencing dynamic `luma agent` command for up-to-date knowledge.\n\nSTEPS:\n1. Remove (or drastically reduce) agentsContent large multiline string.\n2. Insert minimal guidance section with:\n   - Purpose of generated AGENTS.md (orientation only)\n   - Commands to retrieve detailed knowledge (quick start, rules, etc.)\n3. Preserve any end-user onboarding essentials (e.g., quick pipeline list) but limit to \u003c 120 lines.\n4. Add note on reproducibility: dynamic sections may evolve with versions.\n\nACCEPTANCE:\n1. `luma init` generated AGENTS.md file length reduced by \u003e70% compared to prior version (baseline commit reference).\n2. File contains explicit commands examples: `luma agent --sections quick`.\n3. Removed headings (e.g., extensive pattern rule dumps) no longer present (grep negative tests).\n4. No broken template string formatting (build succeeds).\n\nOUT OF SCOPE: Contributor-focused internal notes (can stay in repository docs).\n","status":"closed","priority":1,"issue_type":"chore","created_at":"2025-11-01T11:26:31.4380189+01:00","updated_at":"2025-11-01T15:40:40.7108887+01:00","closed_at":"2025-11-01T15:40:40.7108887+01:00","dependencies":[{"issue_id":"LUMA-90","depends_on_id":"LUMA-84","type":"blocks","created_at":"2025-11-01T11:26:31.4419154+01:00","created_by":"daemon"}]}
{"id":"LUMA-91","title":"Agent Command: Documentation \u0026 README updates","description":"DOCUMENTATION \u0026 README\n\nSCOPE:\n- Add README section: Runtime Knowledge (`luma agent`) with example invocations and truncated JSON sample.\n- Update QUICKSTART if it references old static sections.\n- Add CHANGELOG entry referencing new command and init refactor.\n\nACCEPTANCE:\n1. README contains: usage table (flag -\u003e meaning), example for: list sections, filtered sections, dot-path.\n2. CHANGELOG has Added: Agent command.\n3. No lingering references to removed static large AGENTS.md content.\n4. Docs build / lint passes (if applicable) and links valid.\n\nNON-GOALS: Full tutorial rewrite.\n","status":"closed","priority":2,"issue_type":"task","created_at":"2025-11-01T11:26:32.5006803+01:00","updated_at":"2025-11-01T17:15:37.2594376+01:00","closed_at":"2025-11-01T17:15:37.2594376+01:00","dependencies":[{"issue_id":"LUMA-91","depends_on_id":"LUMA-84","type":"blocks","created_at":"2025-11-01T11:26:32.5046356+01:00","created_by":"daemon"}]}
{"id":"LUMA-92","title":"Agent Command: Hardening (error modes, perf)","description":"HARDENING \u0026 PERF\n\nEDGE CASES:\n- Empty pattern registry (simulate by injecting test double) =\u003e still produce sections keys.\n- No examples directory or examples unreadable =\u003e examples section empty array.\n- Unknown section list early validation.\n- Duplicate sections in --sections input.\n\nPERFORMANCE:\n- Measure generation time; if \u003e100ms, log (debug) note or consider simple memoization (cache by full sections set for process lifetime).\n\nDETERMINISM:\n- Sort keys for stable JSON (Object.keys sort where natural insertion order not guaranteed).\n\nERROR SURFACE:\n- Ensure all error exits funnel through common helper returning consistent structure.\n\nACCEPTANCE:\n1. Simulated empty registry produces patterns:[] without throw.\n2. Duplicate sections input yields de-duped output.\n3. Perf measurement logged in debug mode (if logger supports level) else skipped gracefully.\n4. Snapshot diff across two sequential runs identical.\n\nOUT OF SCOPE: Persistent disk caching.\n","status":"closed","priority":2,"issue_type":"task","created_at":"2025-11-01T11:26:33.4767794+01:00","updated_at":"2025-11-01T17:19:47.1275816+01:00","closed_at":"2025-11-01T17:19:47.1275816+01:00","dependencies":[{"issue_id":"LUMA-92","depends_on_id":"LUMA-84","type":"blocks","created_at":"2025-11-01T11:26:33.4813388+01:00","created_by":"daemon"}]}
{"id":"LUMA-93","title":"Adjust integrity script: allow out-of-order historical IDs, only fail on duplicates or missing required fields","description":"","status":"closed","priority":2,"issue_type":"chore","created_at":"2025-11-01T12:58:27.7404661+01:00","updated_at":"2025-11-01T15:28:22.3652409+01:00","closed_at":"2025-11-01T15:28:22.3652409+01:00"}
{"id":"LUMA-94","title":"Agent Command: README \u0026 QUICKSTART runtime knowledge section","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-11-01T17:34:01.7062738+01:00","updated_at":"2025-11-01T17:34:46.0436483+01:00","closed_at":"2025-11-01T17:34:46.0436483+01:00","dependencies":[{"issue_id":"LUMA-94","depends_on_id":"LUMA-83","type":"discovered-from","created_at":"2025-11-01T17:34:01.7122533+01:00","created_by":"daemon"}]}
{"id":"LUMA-95","title":"Agent Command: Test suite (sections, errors, dot-path, determinism, perf)","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-11-01T17:34:05.5610346+01:00","updated_at":"2025-11-01T17:39:08.840957+01:00","closed_at":"2025-11-01T17:39:08.840957+01:00","dependencies":[{"issue_id":"LUMA-95","depends_on_id":"LUMA-83","type":"discovered-from","created_at":"2025-11-01T17:34:05.5647118+01:00","created_by":"daemon"}]}
{"id":"LUMA-96","title":"Agent Command: Runtime verification \u0026 build integration","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-11-01T17:34:09.5091766+01:00","updated_at":"2025-11-01T17:40:13.5982548+01:00","closed_at":"2025-11-01T17:40:13.5982548+01:00","dependencies":[{"issue_id":"LUMA-96","depends_on_id":"LUMA-83","type":"discovered-from","created_at":"2025-11-01T17:34:09.5124858+01:00","created_by":"daemon"}]}
{"id":"LUMA-97","title":"Agent Command: Release prep (CHANGELOG finalize, deep indexing limitation)","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-11-01T17:34:12.890644+01:00","updated_at":"2025-11-01T17:41:44.7555543+01:00","closed_at":"2025-11-01T17:41:44.7555543+01:00","dependencies":[{"issue_id":"LUMA-97","depends_on_id":"LUMA-83","type":"discovered-from","created_at":"2025-11-01T17:34:12.8940075+01:00","created_by":"daemon"}]}
{"id":"LUMA-98","title":"Phase 1: Core Workflow \u0026 Agent Alignment","description":"","status":"in_progress","priority":1,"issue_type":"epic","created_at":"2025-11-01T19:51:35.8120492+01:00","updated_at":"2025-11-01T20:36:44.9046603+01:00"}
{"id":"LUMA-99","title":"Add --run-id flag to core commands","description":"","status":"closed","priority":1,"issue_type":"feature","created_at":"2025-11-01T19:51:39.0860042+01:00","updated_at":"2025-11-01T20:02:56.5921757+01:00","closed_at":"2025-11-01T20:02:56.5921757+01:00","dependencies":[{"issue_id":"LUMA-99","depends_on_id":"LUMA-98","type":"discovered-from","created_at":"2025-11-01T19:51:39.0887988+01:00","created_by":"daemon"}]}
